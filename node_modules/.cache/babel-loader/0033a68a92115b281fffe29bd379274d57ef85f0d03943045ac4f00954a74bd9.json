{"ast":null,"code":"export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"Building a Production-Ready After Effects Panel with AI Assistance\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"Automation\", \"AI\", \"Development\"],\n  content: [{\n    type: 'personal-intro',\n    content: \"As a VFX artist and TD, I'm always looking for ways to streamline our production pipeline. Recently, I embarked on an interesting journey: creating a custom After Effects panel using modern development tools and AI assistance. Here's how it went.\"\n  }, {\n    type: 'journey-start',\n    content: {\n      title: \"The Challenge 🎯\",\n      text: \"In our production pipeline, we had several manual tasks that were becoming time-consuming: tracking week numbers for deliveries, following specific naming conventions for exports, and sending repetitive Discord notifications. I decided to automate these processes with a custom After Effects panel.\"\n    }\n  }, {\n    type: 'development-timeline',\n    content: {\n      title: \"Development Tools 🛠️\",\n      stages: [{\n        date: \"AI Assistance\",\n        title: \"Claude & Cursor IDE\",\n        description: \"I leveraged two powerful AI tools: Claude (Anthropic's AI) for code assistance and problem-solving, and Cursor IDE - a revolutionary code editor that integrates AI capabilities directly into the development environment. Claude helped me understand complex concepts and debug issues, while Cursor's AI-powered features accelerated my coding process with intelligent autocompletions and real-time suggestions.\"\n      }, {\n        date: \"Framework\",\n        title: \"React.js\",\n        description: \"For building the panel's interface, I chose React.js - a popular JavaScript library for creating user interfaces. React's component-based architecture made it perfect for building a modular, maintainable panel. Its virtual DOM and efficient rendering system ensure smooth performance, crucial for a production tool.\"\n      }, {\n        date: \"Adobe Integration\",\n        title: \"CEP (Common Extensibility Platform)\",\n        description: \"Adobe's CEP framework allowed me to create a bridge between web technologies (HTML, CSS, JavaScript) and After Effects. This enabled the panel to interact with AE's scripting engine while maintaining a modern, responsive interface.\"\n      }]\n    }\n  }, {\n    type: 'feature-section',\n    content: {\n      title: \"Key Features 🔑\",\n      features: [{\n        title: \"Automated Week Tracking\",\n        description: \"The panel automatically tracks and displays the current production week, eliminating manual tracking and reducing errors in delivery scheduling.\"\n      }, {\n        title: \"Smart Export System\",\n        description: \"Implements automated file naming conventions and export settings, ensuring consistency across all deliverables.\"\n      }, {\n        title: \"Discord Integration\",\n        description: \"Automatically sends notifications to team members through Discord when exports are complete, replacing manual messages with automated updates.\"\n      }]\n    }\n  }, {\n    type: 'code-section',\n    content: {\n      title: \"Technical Implementation 💻\",\n      code: `// Example of the Discord notification system\nconst sendDiscordNotification = async (exportDetails) => {\n  const webhook = new Discord.WebhookClient(WEBHOOK_ID, WEBHOOK_TOKEN);\n  \n  await webhook.send({\n    content: \\`🎬 New Export Complete!\n    Project: \\${exportDetails.projectName}\n    Week: \\${exportDetails.weekNumber}\n    Status: Ready for Review\\`\n  });\n};`\n    }\n  }, {\n    type: 'journey-start',\n    content: {\n      title: \"The Power of Modern Development Tools 🚀\",\n      text: `Working with AI-powered development tools has been a game-changer. Claude acts as an intelligent coding partner, helping with everything from architecture decisions to debugging complex issues. Cursor IDE's AI integration makes coding faster and more intuitive, with features like:\n\n• Intelligent code completion\n• Real-time error detection\n• Context-aware suggestions\n• Automated documentation\n• Code refactoring assistance`\n    }\n  }, {\n    type: 'dialogue-section',\n    content: {\n      title: \"AI-Assisted Development Example 🤖\",\n      conversation: [{\n        speaker: \"Me\",\n        text: \"How can I access the current composition in After Effects using CEP?\"\n      }, {\n        speaker: \"Claude\",\n        text: \"You can use the following code snippet:\\n\\nvar comp = app.project.activeItem;\\nif (comp instanceof CompItem) {\\n  // Access composition properties\\n}\"\n      }, {\n        speaker: \"Me\",\n        text: \"How do I ensure the panel persists settings between sessions?\"\n      }, {\n        speaker: \"Claude\",\n        text: \"You can use ExtendScript's preferences system:\\n\\nvar prefs = app.settings.saveSetting('sectionName', 'keyName', value);\\n\\n// Later retrieve with:\\nvar savedValue = app.settings.getSetting('sectionName', 'keyName');\"\n      }]\n    }\n  }, {\n    type: 'journey-start',\n    content: {\n      title: \"Results and Impact 📈\",\n      text: \"The custom panel has significantly improved our workflow. What used to take 5-10 minutes of manual work per export now happens automatically in seconds. The Discord integration ensures immediate communication with the team, and the automated naming system has eliminated naming-related errors completely.\"\n    }\n  }, {\n    type: 'conclusion',\n    content: {\n      title: \"Looking Forward 🔮\",\n      text: \"This project demonstrated how modern development tools and AI assistance can help create powerful production tools. I'm planning to expand the panel's capabilities with more automation features and potentially share it with the wider After Effects community.\"\n    }\n  }]\n};","map":{"version":3,"names":["aeCustomPanelPost","slug","title","date","author","tags","content","type","text","stages","description","features","code","conversation","speaker"],"sources":["/Users/martintomek/passive/src/data/blogPosts/aeCustomPanel.js"],"sourcesContent":["export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"Building a Production-Ready After Effects Panel with AI Assistance\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"Automation\", \"AI\", \"Development\"],\n  content: [\n    {\n      type: 'personal-intro',\n      content: \"As a VFX artist and TD, I'm always looking for ways to streamline our production pipeline. Recently, I embarked on an interesting journey: creating a custom After Effects panel using modern development tools and AI assistance. Here's how it went.\"\n    },\n    {\n      type: 'journey-start',\n      content: {\n        title: \"The Challenge 🎯\",\n        text: \"In our production pipeline, we had several manual tasks that were becoming time-consuming: tracking week numbers for deliveries, following specific naming conventions for exports, and sending repetitive Discord notifications. I decided to automate these processes with a custom After Effects panel.\"\n      }\n    },\n    {\n      type: 'development-timeline',\n      content: {\n        title: \"Development Tools 🛠️\",\n        stages: [\n          {\n            date: \"AI Assistance\",\n            title: \"Claude & Cursor IDE\",\n            description: \"I leveraged two powerful AI tools: Claude (Anthropic's AI) for code assistance and problem-solving, and Cursor IDE - a revolutionary code editor that integrates AI capabilities directly into the development environment. Claude helped me understand complex concepts and debug issues, while Cursor's AI-powered features accelerated my coding process with intelligent autocompletions and real-time suggestions.\"\n          },\n          {\n            date: \"Framework\",\n            title: \"React.js\",\n            description: \"For building the panel's interface, I chose React.js - a popular JavaScript library for creating user interfaces. React's component-based architecture made it perfect for building a modular, maintainable panel. Its virtual DOM and efficient rendering system ensure smooth performance, crucial for a production tool.\"\n          },\n          {\n            date: \"Adobe Integration\",\n            title: \"CEP (Common Extensibility Platform)\",\n            description: \"Adobe's CEP framework allowed me to create a bridge between web technologies (HTML, CSS, JavaScript) and After Effects. This enabled the panel to interact with AE's scripting engine while maintaining a modern, responsive interface.\"\n          }\n        ]\n      }\n    },\n    {\n      type: 'feature-section',\n      content: {\n        title: \"Key Features 🔑\",\n        features: [\n          {\n            title: \"Automated Week Tracking\",\n            description: \"The panel automatically tracks and displays the current production week, eliminating manual tracking and reducing errors in delivery scheduling.\"\n          },\n          {\n            title: \"Smart Export System\",\n            description: \"Implements automated file naming conventions and export settings, ensuring consistency across all deliverables.\"\n          },\n          {\n            title: \"Discord Integration\",\n            description: \"Automatically sends notifications to team members through Discord when exports are complete, replacing manual messages with automated updates.\"\n          }\n        ]\n      }\n    },\n    {\n      type: 'code-section',\n      content: {\n        title: \"Technical Implementation 💻\",\n        code: `// Example of the Discord notification system\nconst sendDiscordNotification = async (exportDetails) => {\n  const webhook = new Discord.WebhookClient(WEBHOOK_ID, WEBHOOK_TOKEN);\n  \n  await webhook.send({\n    content: \\`🎬 New Export Complete!\n    Project: \\${exportDetails.projectName}\n    Week: \\${exportDetails.weekNumber}\n    Status: Ready for Review\\`\n  });\n};`\n      }\n    },\n    {\n      type: 'journey-start',\n      content: {\n        title: \"The Power of Modern Development Tools 🚀\",\n        text: `Working with AI-powered development tools has been a game-changer. Claude acts as an intelligent coding partner, helping with everything from architecture decisions to debugging complex issues. Cursor IDE's AI integration makes coding faster and more intuitive, with features like:\n\n• Intelligent code completion\n• Real-time error detection\n• Context-aware suggestions\n• Automated documentation\n• Code refactoring assistance`\n      }\n    },\n    {\n      type: 'dialogue-section',\n      content: {\n        title: \"AI-Assisted Development Example 🤖\",\n        conversation: [\n          {\n            speaker: \"Me\",\n            text: \"How can I access the current composition in After Effects using CEP?\"\n          },\n          {\n            speaker: \"Claude\",\n            text: \"You can use the following code snippet:\\n\\nvar comp = app.project.activeItem;\\nif (comp instanceof CompItem) {\\n  // Access composition properties\\n}\"\n          },\n          {\n            speaker: \"Me\",\n            text: \"How do I ensure the panel persists settings between sessions?\"\n          },\n          {\n            speaker: \"Claude\",\n            text: \"You can use ExtendScript's preferences system:\\n\\nvar prefs = app.settings.saveSetting('sectionName', 'keyName', value);\\n\\n// Later retrieve with:\\nvar savedValue = app.settings.getSetting('sectionName', 'keyName');\"\n          }\n        ]\n      }\n    },\n    {\n      type: 'journey-start',\n      content: {\n        title: \"Results and Impact 📈\",\n        text: \"The custom panel has significantly improved our workflow. What used to take 5-10 minutes of manual work per export now happens automatically in seconds. The Discord integration ensures immediate communication with the team, and the automated naming system has eliminated naming-related errors completely.\"\n      }\n    },\n    {\n      type: 'conclusion',\n      content: {\n        title: \"Looking Forward 🔮\",\n        text: \"This project demonstrated how modern development tools and AI assistance can help create powerful production tools. I'm planning to expand the panel's capabilities with more automation features and potentially share it with the wider After Effects community.\"\n      }\n    }\n  ]\n};\n  "],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG;EAC/BC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE,oEAAoE;EAC3EC,IAAI,EAAE,gBAAgB;EACtBC,MAAM,EAAE,cAAc;EACtBC,IAAI,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,IAAI,EAAE,aAAa,CAAC;EAC1DC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,gBAAgB;IACtBD,OAAO,EAAE;EACX,CAAC,EACD;IACEC,IAAI,EAAE,eAAe;IACrBD,OAAO,EAAE;MACPJ,KAAK,EAAE,kBAAkB;MACzBM,IAAI,EAAE;IACR;EACF,CAAC,EACD;IACED,IAAI,EAAE,sBAAsB;IAC5BD,OAAO,EAAE;MACPJ,KAAK,EAAE,uBAAuB;MAC9BO,MAAM,EAAE,CACN;QACEN,IAAI,EAAE,eAAe;QACrBD,KAAK,EAAE,qBAAqB;QAC5BQ,WAAW,EAAE;MACf,CAAC,EACD;QACEP,IAAI,EAAE,WAAW;QACjBD,KAAK,EAAE,UAAU;QACjBQ,WAAW,EAAE;MACf,CAAC,EACD;QACEP,IAAI,EAAE,mBAAmB;QACzBD,KAAK,EAAE,qCAAqC;QAC5CQ,WAAW,EAAE;MACf,CAAC;IAEL;EACF,CAAC,EACD;IACEH,IAAI,EAAE,iBAAiB;IACvBD,OAAO,EAAE;MACPJ,KAAK,EAAE,iBAAiB;MACxBS,QAAQ,EAAE,CACR;QACET,KAAK,EAAE,yBAAyB;QAChCQ,WAAW,EAAE;MACf,CAAC,EACD;QACER,KAAK,EAAE,qBAAqB;QAC5BQ,WAAW,EAAE;MACf,CAAC,EACD;QACER,KAAK,EAAE,qBAAqB;QAC5BQ,WAAW,EAAE;MACf,CAAC;IAEL;EACF,CAAC,EACD;IACEH,IAAI,EAAE,cAAc;IACpBD,OAAO,EAAE;MACPJ,KAAK,EAAE,6BAA6B;MACpCU,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACM;EACF,CAAC,EACD;IACEL,IAAI,EAAE,eAAe;IACrBD,OAAO,EAAE;MACPJ,KAAK,EAAE,0CAA0C;MACjDM,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;IACM;EACF,CAAC,EACD;IACED,IAAI,EAAE,kBAAkB;IACxBD,OAAO,EAAE;MACPJ,KAAK,EAAE,oCAAoC;MAC3CW,YAAY,EAAE,CACZ;QACEC,OAAO,EAAE,IAAI;QACbN,IAAI,EAAE;MACR,CAAC,EACD;QACEM,OAAO,EAAE,QAAQ;QACjBN,IAAI,EAAE;MACR,CAAC,EACD;QACEM,OAAO,EAAE,IAAI;QACbN,IAAI,EAAE;MACR,CAAC,EACD;QACEM,OAAO,EAAE,QAAQ;QACjBN,IAAI,EAAE;MACR,CAAC;IAEL;EACF,CAAC,EACD;IACED,IAAI,EAAE,eAAe;IACrBD,OAAO,EAAE;MACPJ,KAAK,EAAE,uBAAuB;MAC9BM,IAAI,EAAE;IACR;EACF,CAAC,EACD;IACED,IAAI,EAAE,YAAY;IAClBD,OAAO,EAAE;MACPJ,KAAK,EAAE,oBAAoB;MAC3BM,IAAI,EAAE;IACR;EACF,CAAC;AAEL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}