{"ast":null,"code":"var _jsxFileName = \"/Users/martintomek/passive/src/pages/BlogPost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport DownloadButton from '../components/blog/DownloadButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogPost() {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const blogPosts = {\n    'nuke-advanced-grab-tool': {\n      title: \"Transform Your Compositing Workflow with Nuke Advanced Grab Tool v3.8\",\n      date: \"November 9, 2024\",\n      author: \"Martin Tomek\",\n      tags: [\"Nuke\", \"Python\", \"Workflow\", \"Technical Guide\"],\n      videoId: \"your-video-id-6\",\n      content: [{\n        type: 'paragraph',\n        content: \"In the fast-paced realm of visual effects and compositing, efficiency and precision are not just advantages—they're necessities. As projects grow in complexity, managing the Node Graph in Nuke can become a daunting task. Today, we're introducing the Nuke Advanced Grab Tool v3.8, a transformative script designed to elevate your node manipulation capabilities.\"\n      }, {\n        type: 'download-section',\n        content: {\n          nukepedia: \"https://www.nukepedia.com/python/nodegraph/nuke-grab-tool\",\n          github: \"https://github.com/yourusername/NukeGrabTool\"\n        }\n      }, {\n        type: 'video-demo',\n        videoId: \"your-video-id-6\"\n      }, {\n        type: 'heading',\n        content: \"What is the Advanced Grab Tool?\"\n      }, {\n        type: 'paragraph',\n        content: \"The Advanced Grab Tool is a Python script that enhances Nuke's node movement behavior, offering greater control and efficiency in your workflow. Inspired by Blender's Grab Tool, this script allows you to move nodes, input trees, or entire connected node trees with unprecedented ease and precision.\"\n      }, {\n        type: 'heading',\n        content: \"Key Features\"\n      }, {\n        type: 'paragraph',\n        content: \"• Standard Grab (E): Move selected nodes\\n• Input Tree Grab (Ctrl+Alt+E): Move selected nodes and upstream dependencies\\n• Full Tree Grab (Ctrl+E): Move entire connected node tree\\n• Axis Locking: Lock movement to X or Y axis\\n• Zoom-Level Handling: Consistent movement regardless of zoom level\\n• Movement Freezing: Hold middle mouse button or Alt + Left-click to freeze\\n• Undo Support: Fully integrated with Nuke's undo system\"\n      }, {\n        type: 'heading',\n        content: \"Real-World Applications\"\n      }, {\n        type: 'paragraph',\n        content: \"Imagine working on a complex compositing project with hundreds of nodes. You need to reorganize your keying setup while maintaining all the connections to your grain, grade, and output nodes. With the Advanced Grab Tool, simply select your key nodes, use Input Tree Grab, and move everything together—no more tedious manual reorganization or risk of breaking connections.\"\n      }, {\n        type: 'heading',\n        content: \"Installation Guide\"\n      }, {\n        type: 'paragraph',\n        content: \"1. Download NukeGrabTool.py from our GitHub repository\\n2. Place in your .nuke directory (~/nuke/ on Linux/Mac, %userprofile%/.nuke/ on Windows)\\n3. Add 'import NukeGrabTool' to your menu.py\\n4. Restart Nuke to activate the tool\"\n      }, {\n        type: 'heading',\n        content: \"Using the Tool\"\n      }, {\n        type: 'paragraph',\n        content: \"1. Select your nodes in the Node Graph\\n2. Press 'E' for standard grab mode\\n3. Move your nodes with the mouse\\n4. Press 'Z' or 'Y' to lock movement to an axis\\n5. Click or press 'E' again to confirm placement\\n6. Press 'Esc' to cancel the operation\"\n      }, {\n        type: 'heading',\n        content: \"System Requirements\"\n      }, {\n        type: 'paragraph',\n        content: \"• Nuke 12.1 or newer (required for PySide2 compatibility)\\n• Compatible with Windows, macOS, and Linux\\n• Minimal system overhead—works smoothly even with complex node trees\"\n      }, {\n        type: 'heading',\n        content: \"Pro Tips\"\n      }, {\n        type: 'paragraph',\n        content: \"• Use Full Tree Grab (Ctrl+E) when reorganizing entire effect chains\\n• Combine with axis locking for perfect vertical or horizontal alignment\\n• Customize shortcuts in menu.py to match your workflow\\n• Keep your node trees organized by color-coding different sections\"\n      }, {\n        type: 'heading',\n        content: \"Future Development\"\n      }, {\n        type: 'paragraph',\n        content: \"We're actively working on new features including:\\n• Snap-to-grid functionality\\n• Custom alignment guides\\n• Enhanced multi-selection tools\\n• Integration with popular node presets\"\n      }, {\n        type: 'heading',\n        content: \"Community Support\"\n      }, {\n        type: 'paragraph',\n        content: \"Join our growing community of compositing artists using the Advanced Grab Tool. Share your experiences, suggest improvements, or contribute to the development on our GitHub repository. Your feedback helps shape the future of this tool.\"\n      }, {\n        type: 'heading',\n        content: \"Get Started\"\n      }, {\n        type: 'paragraph',\n        content: \"Transform your Nuke workflow today. Download the Advanced Grab Tool from our GitHub repository and join the community of artists who are already benefiting from enhanced node manipulation capabilities.\\n\\nHappy compositing!\"\n      }, {\n        type: 'heading',\n        content: \"Development Workflow with Claude AI\"\n      }, {\n        type: 'paragraph',\n        content: \"The Nuke Advanced Grab Tool was developed through an iterative process using Claude AI and Nuke's Script Editor. Here's how you can use this workflow to create your own tools:\"\n      }, {\n        type: 'steps',\n        content: [{\n          title: \"1. Initial Code Generation\",\n          description: \"Start by describing your desired tool functionality to Claude AI. Be specific about what you want to achieve in Nuke. For example:\\n'I need a Python script for Nuke that allows moving nodes with the E key, similar to Blender's grab tool.'\"\n        }, {\n          title: \"2. Script Editor Testing\",\n          description: \"Copy the generated code into Nuke's Script Editor (Alt+Shift+S). Test small sections at a time to identify any issues. The Script Editor provides immediate feedback about syntax errors or runtime problems.\"\n        }, {\n          title: \"3. Iterative Refinement\",\n          description: \"When you encounter errors, copy them back to Claude along with the relevant code section. Ask for specific fixes. Claude can help debug issues and suggest improvements based on Nuke's Python API.\"\n        }, {\n          title: \"4. Real-world Testing\",\n          description: \"Test the tool with actual node trees and different scenarios. Note any unexpected behavior or performance issues.\"\n        }]\n      }, {\n        type: 'code-example',\n        content: {\n          title: \"Example Debugging Session with Claude\",\n          code: `# Error encountered in Nuke\nRuntimeError: Error loading PySide2\n\n# Query to Claude\n\"I'm getting a PySide2 error in Nuke 13. Here's my code [paste code]. How can I make it compatible?\"\n\n# Claude's solution\n\"Let's modify the imports to handle both PySide2 and PySide:\"\n\ntry:\n    from PySide2.QtCore import *\nexcept ImportError:\n    from PySide.QtCore import *`\n        }\n      }, {\n        type: 'try-yourself',\n        content: {\n          title: \"Try It Yourself\",\n          steps: [\"1. Open Nuke's Script Editor (Alt+Shift+S)\", \"2. Copy this basic node movement code:\", \"3. Test and modify the code\", \"4. Use Claude to help debug any issues\", \"5. Share your improvements with the community\"],\n          sampleCode: `import nuke\n\ndef grab_nodes():\n    selected = nuke.selectedNodes()\n    if not selected:\n        return\n        \n    # Your grab logic here\n    print(\"Nodes grabbed!\")\n\nnuke.menu('Nuke').addCommand('Edit/Grab Tool', grab_nodes, 'e')`\n        }\n      }]\n    }\n  };\n  const post = blogPosts[slug];\n  const renderContent = content => {\n    switch (content.type) {\n      case 'paragraph':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 leading-relaxed mb-6\",\n          children: content.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 16\n        }, this);\n      case 'heading':\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-white mt-12 mb-6\",\n          children: content.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 16\n        }, this);\n      case 'download-section':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row gap-4 my-8\",\n          children: [/*#__PURE__*/_jsxDEV(DownloadButton, {\n            url: content.content.nukepedia,\n            text: \"Download from Nukepedia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n            url: content.content.github,\n            text: \"View on GitHub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this);\n      case 'video-demo':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aspect-video w-full rounded-lg overflow-hidden my-8\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: `https://www.youtube.com/embed/${content.videoId}`,\n            className: \"w-full h-full\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this);\n      case 'steps':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6 my-8\",\n          children: content.content.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/5 rounded-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-purple-400 mb-3\",\n              children: step.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300 whitespace-pre-line\",\n              children: step.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this);\n      case 'code-example':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: content.content.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-black/50 p-4 rounded-lg overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-sm text-gray-300\",\n              children: content.content.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this);\n      case 'try-yourself':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-purple-900/20 rounded-lg p-6 my-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: content.content.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-decimal list-inside space-y-2 mb-6\",\n            children: content.content.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"text-gray-300\",\n              children: step\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-black/50 p-4 rounded-lg overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-sm text-gray-300\",\n              children: content.content.sampleCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-24\",\n      children: \"Post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.article, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    className: \"max-w-4xl mx-auto px-4 py-24\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-purple-400\",\n        children: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mt-2 mb-4\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"By \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: post.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm bg-white/10 px-3 py-1 rounded-full\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prose prose-invert max-w-none\",\n      children: post.content.map((section, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          delay: index * 0.1\n        },\n        children: renderContent(section)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogPost, \"DpOdpe+T7d3Ytb7f6neHj0L13w0=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useParams","motion","DownloadButton","jsxDEV","_jsxDEV","BlogPost","_s","slug","blogPosts","title","date","author","tags","videoId","content","type","nukepedia","github","description","code","steps","sampleCode","post","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","url","text","src","allowFullScreen","map","step","index","article","initial","opacity","animate","exit","tag","section","div","y","transition","delay","_c","$RefreshReg$"],"sources":["/Users/martintomek/passive/src/pages/BlogPost.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport DownloadButton from '../components/blog/DownloadButton';\n\nfunction BlogPost() {\n  const { slug } = useParams();\n\n  const blogPosts = {\n    'nuke-advanced-grab-tool': {\n      title: \"Transform Your Compositing Workflow with Nuke Advanced Grab Tool v3.8\",\n      date: \"November 9, 2024\",\n      author: \"Martin Tomek\",\n      tags: [\"Nuke\", \"Python\", \"Workflow\", \"Technical Guide\"],\n      videoId: \"your-video-id-6\",\n      content: [\n        {\n          type: 'paragraph',\n          content: \"In the fast-paced realm of visual effects and compositing, efficiency and precision are not just advantages—they're necessities. As projects grow in complexity, managing the Node Graph in Nuke can become a daunting task. Today, we're introducing the Nuke Advanced Grab Tool v3.8, a transformative script designed to elevate your node manipulation capabilities.\"\n        },\n        {\n          type: 'download-section',\n          content: {\n            nukepedia: \"https://www.nukepedia.com/python/nodegraph/nuke-grab-tool\",\n            github: \"https://github.com/yourusername/NukeGrabTool\"\n          }\n        },\n        {\n          type: 'video-demo',\n          videoId: \"your-video-id-6\"\n        },\n        {\n          type: 'heading',\n          content: \"What is the Advanced Grab Tool?\"\n        },\n        {\n          type: 'paragraph',\n          content: \"The Advanced Grab Tool is a Python script that enhances Nuke's node movement behavior, offering greater control and efficiency in your workflow. Inspired by Blender's Grab Tool, this script allows you to move nodes, input trees, or entire connected node trees with unprecedented ease and precision.\"\n        },\n        {\n          type: 'heading',\n          content: \"Key Features\"\n        },\n        {\n          type: 'paragraph',\n          content: \"• Standard Grab (E): Move selected nodes\\n• Input Tree Grab (Ctrl+Alt+E): Move selected nodes and upstream dependencies\\n• Full Tree Grab (Ctrl+E): Move entire connected node tree\\n• Axis Locking: Lock movement to X or Y axis\\n• Zoom-Level Handling: Consistent movement regardless of zoom level\\n• Movement Freezing: Hold middle mouse button or Alt + Left-click to freeze\\n• Undo Support: Fully integrated with Nuke's undo system\"\n        },\n        {\n          type: 'heading',\n          content: \"Real-World Applications\"\n        },\n        {\n          type: 'paragraph',\n          content: \"Imagine working on a complex compositing project with hundreds of nodes. You need to reorganize your keying setup while maintaining all the connections to your grain, grade, and output nodes. With the Advanced Grab Tool, simply select your key nodes, use Input Tree Grab, and move everything together—no more tedious manual reorganization or risk of breaking connections.\"\n        },\n        {\n          type: 'heading',\n          content: \"Installation Guide\"\n        },\n        {\n          type: 'paragraph',\n          content: \"1. Download NukeGrabTool.py from our GitHub repository\\n2. Place in your .nuke directory (~/nuke/ on Linux/Mac, %userprofile%/.nuke/ on Windows)\\n3. Add 'import NukeGrabTool' to your menu.py\\n4. Restart Nuke to activate the tool\"\n        },\n        {\n          type: 'heading',\n          content: \"Using the Tool\"\n        },\n        {\n          type: 'paragraph',\n          content: \"1. Select your nodes in the Node Graph\\n2. Press 'E' for standard grab mode\\n3. Move your nodes with the mouse\\n4. Press 'Z' or 'Y' to lock movement to an axis\\n5. Click or press 'E' again to confirm placement\\n6. Press 'Esc' to cancel the operation\"\n        },\n        {\n          type: 'heading',\n          content: \"System Requirements\"\n        },\n        {\n          type: 'paragraph',\n          content: \"• Nuke 12.1 or newer (required for PySide2 compatibility)\\n• Compatible with Windows, macOS, and Linux\\n• Minimal system overhead—works smoothly even with complex node trees\"\n        },\n        {\n          type: 'heading',\n          content: \"Pro Tips\"\n        },\n        {\n          type: 'paragraph',\n          content: \"• Use Full Tree Grab (Ctrl+E) when reorganizing entire effect chains\\n• Combine with axis locking for perfect vertical or horizontal alignment\\n• Customize shortcuts in menu.py to match your workflow\\n• Keep your node trees organized by color-coding different sections\"\n        },\n        {\n          type: 'heading',\n          content: \"Future Development\"\n        },\n        {\n          type: 'paragraph',\n          content: \"We're actively working on new features including:\\n• Snap-to-grid functionality\\n• Custom alignment guides\\n• Enhanced multi-selection tools\\n• Integration with popular node presets\"\n        },\n        {\n          type: 'heading',\n          content: \"Community Support\"\n        },\n        {\n          type: 'paragraph',\n          content: \"Join our growing community of compositing artists using the Advanced Grab Tool. Share your experiences, suggest improvements, or contribute to the development on our GitHub repository. Your feedback helps shape the future of this tool.\"\n        },\n        {\n          type: 'heading',\n          content: \"Get Started\"\n        },\n        {\n          type: 'paragraph',\n          content: \"Transform your Nuke workflow today. Download the Advanced Grab Tool from our GitHub repository and join the community of artists who are already benefiting from enhanced node manipulation capabilities.\\n\\nHappy compositing!\"\n        },\n        {\n          type: 'heading',\n          content: \"Development Workflow with Claude AI\"\n        },\n        {\n          type: 'paragraph',\n          content: \"The Nuke Advanced Grab Tool was developed through an iterative process using Claude AI and Nuke's Script Editor. Here's how you can use this workflow to create your own tools:\"\n        },\n        {\n          type: 'steps',\n          content: [\n            {\n              title: \"1. Initial Code Generation\",\n              description: \"Start by describing your desired tool functionality to Claude AI. Be specific about what you want to achieve in Nuke. For example:\\n'I need a Python script for Nuke that allows moving nodes with the E key, similar to Blender's grab tool.'\"\n            },\n            {\n              title: \"2. Script Editor Testing\",\n              description: \"Copy the generated code into Nuke's Script Editor (Alt+Shift+S). Test small sections at a time to identify any issues. The Script Editor provides immediate feedback about syntax errors or runtime problems.\"\n            },\n            {\n              title: \"3. Iterative Refinement\",\n              description: \"When you encounter errors, copy them back to Claude along with the relevant code section. Ask for specific fixes. Claude can help debug issues and suggest improvements based on Nuke's Python API.\"\n            },\n            {\n              title: \"4. Real-world Testing\",\n              description: \"Test the tool with actual node trees and different scenarios. Note any unexpected behavior or performance issues.\"\n            }\n          ]\n        },\n        {\n          type: 'code-example',\n          content: {\n            title: \"Example Debugging Session with Claude\",\n            code: `# Error encountered in Nuke\nRuntimeError: Error loading PySide2\n\n# Query to Claude\n\"I'm getting a PySide2 error in Nuke 13. Here's my code [paste code]. How can I make it compatible?\"\n\n# Claude's solution\n\"Let's modify the imports to handle both PySide2 and PySide:\"\n\ntry:\n    from PySide2.QtCore import *\nexcept ImportError:\n    from PySide.QtCore import *`\n          }\n        },\n        {\n          type: 'try-yourself',\n          content: {\n            title: \"Try It Yourself\",\n            steps: [\n              \"1. Open Nuke's Script Editor (Alt+Shift+S)\",\n              \"2. Copy this basic node movement code:\",\n              \"3. Test and modify the code\",\n              \"4. Use Claude to help debug any issues\",\n              \"5. Share your improvements with the community\"\n            ],\n            sampleCode: `import nuke\n\ndef grab_nodes():\n    selected = nuke.selectedNodes()\n    if not selected:\n        return\n        \n    # Your grab logic here\n    print(\"Nodes grabbed!\")\n\nnuke.menu('Nuke').addCommand('Edit/Grab Tool', grab_nodes, 'e')`\n          }\n        }\n      ]\n    }\n  };\n\n  const post = blogPosts[slug];\n\n  const renderContent = (content) => {\n    switch (content.type) {\n      case 'paragraph':\n        return <p className=\"text-gray-300 leading-relaxed mb-6\">{content.content}</p>;\n        \n      case 'heading':\n        return <h2 className=\"text-2xl font-bold text-white mt-12 mb-6\">{content.content}</h2>;\n        \n      case 'download-section':\n        return (\n          <div className=\"flex flex-col sm:flex-row gap-4 my-8\">\n            <DownloadButton \n              url={content.content.nukepedia}\n              text=\"Download from Nukepedia\"\n            />\n            <DownloadButton \n              url={content.content.github}\n              text=\"View on GitHub\"\n            />\n          </div>\n        );\n        \n      case 'video-demo':\n        return (\n          <div className=\"aspect-video w-full rounded-lg overflow-hidden my-8\">\n            <iframe\n              src={`https://www.youtube.com/embed/${content.videoId}`}\n              className=\"w-full h-full\"\n              allowFullScreen\n            />\n          </div>\n        );\n        \n      case 'steps':\n        return (\n          <div className=\"space-y-6 my-8\">\n            {content.content.map((step, index) => (\n              <div key={index} className=\"bg-white/5 rounded-lg p-6\">\n                <h3 className=\"text-xl font-semibold text-purple-400 mb-3\">\n                  {step.title}\n                </h3>\n                <p className=\"text-gray-300 whitespace-pre-line\">\n                  {step.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        );\n        \n      case 'code-example':\n        return (\n          <div className=\"my-8\">\n            <h3 className=\"text-xl font-semibold mb-4\">{content.content.title}</h3>\n            <pre className=\"bg-black/50 p-4 rounded-lg overflow-x-auto\">\n              <code className=\"text-sm text-gray-300\">\n                {content.content.code}\n              </code>\n            </pre>\n          </div>\n        );\n        \n      case 'try-yourself':\n        return (\n          <div className=\"bg-purple-900/20 rounded-lg p-6 my-8\">\n            <h3 className=\"text-xl font-semibold mb-4\">{content.content.title}</h3>\n            <ul className=\"list-decimal list-inside space-y-2 mb-6\">\n              {content.content.steps.map((step, index) => (\n                <li key={index} className=\"text-gray-300\">{step}</li>\n              ))}\n            </ul>\n            <pre className=\"bg-black/50 p-4 rounded-lg overflow-x-auto\">\n              <code className=\"text-sm text-gray-300\">\n                {content.content.sampleCode}\n              </code>\n            </pre>\n          </div>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  if (!post) {\n    return <div className=\"container mx-auto px-4 py-24\">Post not found</div>;\n  }\n\n  return (\n    <motion.article\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"max-w-4xl mx-auto px-4 py-24\"\n    >\n      <div className=\"mb-8\">\n        <span className=\"text-purple-400\">{post.date}</span>\n        <h1 className=\"text-4xl font-bold mt-2 mb-4\">{post.title}</h1>\n        <div className=\"flex items-center gap-2 text-gray-400\">\n          <span>By {post.author}</span>\n          <span>•</span>\n          <div className=\"flex gap-2\">\n            {post.tags.map(tag => (\n              <span key={tag} className=\"text-sm bg-white/10 px-3 py-1 rounded-full\">\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"prose prose-invert max-w-none\">\n        {post.content.map((section, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n          >\n            {renderContent(section)}\n          </motion.div>\n        ))}\n      </div>\n    </motion.article>\n  );\n}\n\nexport default BlogPost; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}