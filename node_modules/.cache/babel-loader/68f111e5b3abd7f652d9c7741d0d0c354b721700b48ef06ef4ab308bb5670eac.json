{"ast":null,"code":"export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"üé® Building a Custom Panel for After Effects with AI\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"Automation\", \"VFX\", \"Workflow\", \"Discord\"],\n  content: [{\n    type: 'intro',\n    content: `As a Compositing TD, I wanted to automate repetitive tasks in After Effects. \n        Here's how I combined different tools to create a powerful automation solution. Each tool\n        played a crucial role in making this project successful.`\n  }, {\n    type: 'section',\n    title: \"ü§ñ Claude: The AI Assistant\",\n    content: `My journey started with Claude AI. As someone who isn't a professional programmer, \n        I discovered that Claude could:\n        ‚Ä¢ Break down complex problems into manageable steps\n        ‚Ä¢ Explain After Effects' scripting API in simple terms\n        ‚Ä¢ Suggest best practices and optimizations\n        ‚Ä¢ Help debug issues when I got stuck\n        \n        The key was asking specific questions and iteratively improving the code. Claude became\n        like a patient mentor, helping me understand not just what to code, but why certain\n        approaches work better than others.`\n  }, {\n    type: 'section',\n    title: \"üíª Cursor IDE: AI-Powered Development\",\n    content: `Cursor IDE transformed how I write code:\n        ‚Ä¢ Real-time AI suggestions while typing\n        ‚Ä¢ Intelligent code completion\n        ‚Ä¢ Built-in Claude integration\n        ‚Ä¢ Quick documentation lookup\n        \n        The combination of Cursor and Claude was perfect for learning - I could experiment\n        with code while getting immediate feedback and suggestions.`\n  }, {\n    type: 'section',\n    title: \"‚öõÔ∏è React App: Building the Interface\",\n    content: `Creating the panel interface with React was surprisingly straightforward:\n        ‚Ä¢ Used EEAct (React framework for After Effects)\n        ‚Ä¢ Created reusable components for common tasks\n        ‚Ä¢ Implemented a clean, modern design\n        ‚Ä¢ Added smooth animations and transitions\n        \n        React's component-based approach made it easy to organize features and maintain\n        the code as the project grew.`\n  }, {\n    type: 'section',\n    title: \"üìö GitHub: Version Control & Sharing\",\n    content: `GitHub became essential for:\n        ‚Ä¢ Tracking all code changes\n        ‚Ä¢ Creating backups\n        ‚Ä¢ Sharing with other artists\n        ‚Ä¢ Managing different versions\n        \n        As a VFX artist, I never thought I'd use GitHub, but it's now an integral part\n        of my workflow. It's not just for professional developers!`\n  }, {\n    type: 'section',\n    title: \"ü§ù Discord Integration: Team Communication\",\n    content: `The Discord bot integration streamlined our workflow:\n        ‚Ä¢ Automatic notifications for new exports\n        ‚Ä¢ Status updates for long renders\n        ‚Ä¢ Team announcements\n        ‚Ä¢ Quick feedback sharing\n        \n        Using Discord's webhook API with React made it simple to send updates\n        directly from the After Effects panel.`\n  }, {\n    type: 'section',\n    title: \"üé® Framer Motion: Bringing the UI to Life\",\n    content: `Animation played a crucial role in making the panel feel professional and \n        intuitive. Framer Motion helped me create smooth transitions and interactions:\n        ‚Ä¢ Fluid drag-and-drop for node arrangement\n        ‚Ä¢ Smooth transitions between states\n        ‚Ä¢ Interactive feedback for user actions\n        ‚Ä¢ Polished micro-animations\n        \n        Here are some examples of what's possible with Framer Motion:`\n  }, {\n    type: 'demo',\n    title: \"Interactive Demos\",\n    content: {\n      demos: [{\n        type: \"dragDemo\",\n        title: \"Drag Interactions\",\n        description: `Demonstrates different types of drag behaviors:\n              ‚Ä¢ Basic dragging with constraints\n              ‚Ä¢ Elastic drag with feedback\n              ‚Ä¢ Axis-locked movement`\n      }, {\n        type: \"example\",\n        title: \"Animation Playground\",\n        description: `Showcases various animation possibilities:\n              ‚Ä¢ Interactive cards\n              ‚Ä¢ Morphing shapes\n              ‚Ä¢ Particle effects\n              ‚Ä¢ Smooth transitions`\n      }]\n    }\n  }, {\n    type: 'section',\n    title: \"üéØ Why Animations Matter\",\n    content: `Adding thoughtful animations isn't just about aesthetics:\n        ‚Ä¢ Provides immediate feedback for user actions\n        ‚Ä¢ Makes the interface feel more responsive\n        ‚Ä¢ Guides users through complex interactions\n        ‚Ä¢ Creates a more engaging experience\n        \n        The key is finding the right balance - animations should enhance the experience,\n        not distract from it.`\n  }, {\n    type: 'demo',\n    title: \"Interactive Panel Demo\",\n    content: {\n      demos: [{\n        type: \"aePanel\",\n        title: \"After Effects Panel Preview\",\n        description: `Experience the panel interface:\n              ‚Ä¢ Try the render queue system\n              ‚Ä¢ Explore the logo library\n              ‚Ä¢ See the animations in action\n              ‚Ä¢ Test the week number tracking`\n      }]\n    }\n  }, {\n    type: 'demo',\n    title: \"Asset Panel Demo\",\n    content: {\n      demos: [{\n        type: \"assetPanel\",\n        title: \"After Effects Asset Panel\",\n        description: `Experience the asset management interface:\n              ‚Ä¢ Browse effect packs\n              ‚Ä¢ Preview animations\n              ‚Ä¢ View detailed information\n              ‚Ä¢ Test the import workflow`\n      }]\n    }\n  }, {\n    type: 'section',\n    title: \"üåê Web Preview: React's Versatility\",\n    content: `One of the most powerful aspects of building the panel in React is that we can \n        preview and test it directly in a web browser. Since both the After Effects panel and \n        this blog are built with React, we can:\n        ‚Ä¢ Display the exact same components in both environments\n        ‚Ä¢ Test functionality without launching After Effects\n        ‚Ä¢ Share demos with stakeholders easily\n        ‚Ä¢ Iterate on designs quickly\n        \n        The demos above aren't just mockups - they're running the actual panel code, \n        just without the After Effects-specific functionality. This demonstrates React's \n        flexibility and the power of component-based architecture.`\n  }, {\n    type: 'conclusion',\n    content: {\n      sections: [{\n        icon: \"üéØ\",\n        title: \"Modern Development is Accessible\",\n        content: `Thanks to AI tools like Claude and Cursor, even artists without traditional programming \n              backgrounds can create professional-grade software. The key is breaking down complex \n              problems into smaller, manageable pieces.`,\n        color: \"from-purple-500 to-blue-500\"\n      }, {\n        icon: \"‚öõÔ∏è\",\n        title: \"React's Universal Appeal\",\n        content: [\"Run the same code in After Effects and web browsers\", \"Leverage a massive ecosystem of components and tools\", \"Create smooth, professional animations with Framer Motion\", \"Build a maintainable, scalable codebase\"],\n        color: \"from-blue-500 to-cyan-500\"\n      }, {\n        icon: \"ü§ù\",\n        title: \"Team Collaboration is Key\",\n        content: [\"Instant notifications keep everyone in sync\", \"Version control prevents conflicts and lost work\", \"Easy sharing of updates and new features\", \"Collaborative problem-solving and improvements\"],\n        color: \"from-cyan-500 to-green-500\"\n      }, {\n        icon: \"‚ö°\",\n        title: \"The Power of Integration\",\n        content: [\"Reduces manual work by 70%\", \"Eliminates common naming errors\", \"Speeds up project delivery\", \"Improves team communication\"],\n        color: \"from-green-500 to-emerald-500\"\n      }],\n      outro: {\n        text: `What started as a way to automate repetitive tasks has evolved into an essential \n            part of our daily workflow, proving that the bridge between creative software and \n            web technology is more accessible than ever.`,\n        links: [{\n          icon: \"github\",\n          text: \"View Source\",\n          url: \"https://github.com/Themolx/AeCustomPanel\"\n        }, {\n          icon: \"discord\",\n          text: \"Join Community\",\n          url: \"https://discord.gg/aeCustomPanel\"\n        }]\n      },\n      inspiration: `Start small, experiment often, and don't be afraid to combine different technologies. \n          The next game-changing tool might be the one you create! üöÄ`\n    }\n  }]\n};","map":{"version":3,"names":["aeCustomPanelPost","slug","title","date","author","tags","content","type","demos","description","sections","icon","color","outro","text","links","url","inspiration"],"sources":["/Users/martintomek/passive/src/data/blogPosts/aeCustomPanel.js"],"sourcesContent":["export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"üé® Building a Custom Panel for After Effects with AI\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"Automation\", \"VFX\", \"Workflow\", \"Discord\"],\n  content: [\n    {\n      type: 'intro',\n      content: `As a Compositing TD, I wanted to automate repetitive tasks in After Effects. \n        Here's how I combined different tools to create a powerful automation solution. Each tool\n        played a crucial role in making this project successful.`\n    },\n    {\n      type: 'section',\n      title: \"ü§ñ Claude: The AI Assistant\",\n      content: `My journey started with Claude AI. As someone who isn't a professional programmer, \n        I discovered that Claude could:\n        ‚Ä¢ Break down complex problems into manageable steps\n        ‚Ä¢ Explain After Effects' scripting API in simple terms\n        ‚Ä¢ Suggest best practices and optimizations\n        ‚Ä¢ Help debug issues when I got stuck\n        \n        The key was asking specific questions and iteratively improving the code. Claude became\n        like a patient mentor, helping me understand not just what to code, but why certain\n        approaches work better than others.`\n    },\n    {\n      type: 'section',\n      title: \"üíª Cursor IDE: AI-Powered Development\",\n      content: `Cursor IDE transformed how I write code:\n        ‚Ä¢ Real-time AI suggestions while typing\n        ‚Ä¢ Intelligent code completion\n        ‚Ä¢ Built-in Claude integration\n        ‚Ä¢ Quick documentation lookup\n        \n        The combination of Cursor and Claude was perfect for learning - I could experiment\n        with code while getting immediate feedback and suggestions.`\n    },\n    {\n      type: 'section',\n      title: \"‚öõÔ∏è React App: Building the Interface\",\n      content: `Creating the panel interface with React was surprisingly straightforward:\n        ‚Ä¢ Used EEAct (React framework for After Effects)\n        ‚Ä¢ Created reusable components for common tasks\n        ‚Ä¢ Implemented a clean, modern design\n        ‚Ä¢ Added smooth animations and transitions\n        \n        React's component-based approach made it easy to organize features and maintain\n        the code as the project grew.`\n    },\n    {\n      type: 'section',\n      title: \"üìö GitHub: Version Control & Sharing\",\n      content: `GitHub became essential for:\n        ‚Ä¢ Tracking all code changes\n        ‚Ä¢ Creating backups\n        ‚Ä¢ Sharing with other artists\n        ‚Ä¢ Managing different versions\n        \n        As a VFX artist, I never thought I'd use GitHub, but it's now an integral part\n        of my workflow. It's not just for professional developers!`\n    },\n    {\n      type: 'section',\n      title: \"ü§ù Discord Integration: Team Communication\",\n      content: `The Discord bot integration streamlined our workflow:\n        ‚Ä¢ Automatic notifications for new exports\n        ‚Ä¢ Status updates for long renders\n        ‚Ä¢ Team announcements\n        ‚Ä¢ Quick feedback sharing\n        \n        Using Discord's webhook API with React made it simple to send updates\n        directly from the After Effects panel.`\n    },\n    {\n      type: 'section',\n      title: \"üé® Framer Motion: Bringing the UI to Life\",\n      content: `Animation played a crucial role in making the panel feel professional and \n        intuitive. Framer Motion helped me create smooth transitions and interactions:\n        ‚Ä¢ Fluid drag-and-drop for node arrangement\n        ‚Ä¢ Smooth transitions between states\n        ‚Ä¢ Interactive feedback for user actions\n        ‚Ä¢ Polished micro-animations\n        \n        Here are some examples of what's possible with Framer Motion:`,\n    },\n    {\n      type: 'demo',\n      title: \"Interactive Demos\",\n      content: {\n        demos: [\n          {\n            type: \"dragDemo\",\n            title: \"Drag Interactions\",\n            description: `Demonstrates different types of drag behaviors:\n              ‚Ä¢ Basic dragging with constraints\n              ‚Ä¢ Elastic drag with feedback\n              ‚Ä¢ Axis-locked movement`\n          },\n          {\n            type: \"example\",\n            title: \"Animation Playground\",\n            description: `Showcases various animation possibilities:\n              ‚Ä¢ Interactive cards\n              ‚Ä¢ Morphing shapes\n              ‚Ä¢ Particle effects\n              ‚Ä¢ Smooth transitions`\n          }\n        ]\n      }\n    },\n    {\n      type: 'section',\n      title: \"üéØ Why Animations Matter\",\n      content: `Adding thoughtful animations isn't just about aesthetics:\n        ‚Ä¢ Provides immediate feedback for user actions\n        ‚Ä¢ Makes the interface feel more responsive\n        ‚Ä¢ Guides users through complex interactions\n        ‚Ä¢ Creates a more engaging experience\n        \n        The key is finding the right balance - animations should enhance the experience,\n        not distract from it.`\n    },\n    {\n      type: 'demo',\n      title: \"Interactive Panel Demo\",\n      content: {\n        demos: [\n          {\n            type: \"aePanel\",\n            title: \"After Effects Panel Preview\",\n            description: `Experience the panel interface:\n              ‚Ä¢ Try the render queue system\n              ‚Ä¢ Explore the logo library\n              ‚Ä¢ See the animations in action\n              ‚Ä¢ Test the week number tracking`\n          }\n        ]\n      }\n    },\n    {\n      type: 'demo',\n      title: \"Asset Panel Demo\",\n      content: {\n        demos: [\n          {\n            type: \"assetPanel\",\n            title: \"After Effects Asset Panel\",\n            description: `Experience the asset management interface:\n              ‚Ä¢ Browse effect packs\n              ‚Ä¢ Preview animations\n              ‚Ä¢ View detailed information\n              ‚Ä¢ Test the import workflow`\n          }\n        ]\n      }\n    },\n    {\n      type: 'section',\n      title: \"üåê Web Preview: React's Versatility\",\n      content: `One of the most powerful aspects of building the panel in React is that we can \n        preview and test it directly in a web browser. Since both the After Effects panel and \n        this blog are built with React, we can:\n        ‚Ä¢ Display the exact same components in both environments\n        ‚Ä¢ Test functionality without launching After Effects\n        ‚Ä¢ Share demos with stakeholders easily\n        ‚Ä¢ Iterate on designs quickly\n        \n        The demos above aren't just mockups - they're running the actual panel code, \n        just without the After Effects-specific functionality. This demonstrates React's \n        flexibility and the power of component-based architecture.`\n    },\n    {\n      type: 'conclusion',\n      content: {\n        sections: [\n          {\n            icon: \"üéØ\",\n            title: \"Modern Development is Accessible\",\n            content: `Thanks to AI tools like Claude and Cursor, even artists without traditional programming \n              backgrounds can create professional-grade software. The key is breaking down complex \n              problems into smaller, manageable pieces.`,\n            color: \"from-purple-500 to-blue-500\"\n          },\n          {\n            icon: \"‚öõÔ∏è\",\n            title: \"React's Universal Appeal\",\n            content: [\n              \"Run the same code in After Effects and web browsers\",\n              \"Leverage a massive ecosystem of components and tools\",\n              \"Create smooth, professional animations with Framer Motion\",\n              \"Build a maintainable, scalable codebase\"\n            ],\n            color: \"from-blue-500 to-cyan-500\"\n          },\n          {\n            icon: \"ü§ù\",\n            title: \"Team Collaboration is Key\",\n            content: [\n              \"Instant notifications keep everyone in sync\",\n              \"Version control prevents conflicts and lost work\",\n              \"Easy sharing of updates and new features\",\n              \"Collaborative problem-solving and improvements\"\n            ],\n            color: \"from-cyan-500 to-green-500\"\n          },\n          {\n            icon: \"‚ö°\",\n            title: \"The Power of Integration\",\n            content: [\n              \"Reduces manual work by 70%\",\n              \"Eliminates common naming errors\",\n              \"Speeds up project delivery\",\n              \"Improves team communication\"\n            ],\n            color: \"from-green-500 to-emerald-500\"\n          }\n        ],\n        outro: {\n          text: `What started as a way to automate repetitive tasks has evolved into an essential \n            part of our daily workflow, proving that the bridge between creative software and \n            web technology is more accessible than ever.`,\n          links: [\n            {\n              icon: \"github\",\n              text: \"View Source\",\n              url: \"https://github.com/Themolx/AeCustomPanel\"\n            },\n            {\n              icon: \"discord\",\n              text: \"Join Community\",\n              url: \"https://discord.gg/aeCustomPanel\"\n            }\n          ]\n        },\n        inspiration: `Start small, experiment often, and don't be afraid to combine different technologies. \n          The next game-changing tool might be the one you create! üöÄ`\n      }\n    }\n  ]\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}