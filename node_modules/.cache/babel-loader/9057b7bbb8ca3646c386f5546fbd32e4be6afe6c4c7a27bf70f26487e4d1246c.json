{"ast":null,"code":"export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"üé® Creating a Smart After Effects Panel (With Help from AI)\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"ExtendScript\", \"React\", \"Automation\"],\n  content: [{\n    type: 'personal-intro',\n    content: \"You know that feeling when you keep doing the same task over and over? That was me, manually tracking week numbers for deliveries, exporting files with specific naming conventions, and sending the same Discord messages to the same person. One day I thought - what if I could automate all of this? With the help of AI tools, I decided to create a custom After Effects panel that would handle all these tedious tasks automatically.\"\n  }, {\n    type: 'tech-explanation',\n    title: \"The Technologies That Made It Possible üõ†Ô∏è\",\n    content: [{\n      title: \"React: Building Blocks for Modern Interfaces ‚öõÔ∏è\",\n      text: \"React completely changed how I think about building user interfaces. Created by Facebook (now Meta), it's the same technology behind Instagram and WhatsApp. But what makes it perfect for After Effects panels? Imagine building with LEGO - each piece (we call them components) can be reused and combined in different ways. My week number tracker? That's a component. Export settings? Another component. They all work together seamlessly.\",\n      details: [\"Components are like smart building blocks that remember their state\", \"When data changes (like the week number), everything updates automatically\", \"Huge community means lots of pre-built components to use\", \"Perfect for complex interfaces like production panels\"],\n      code: `// Example of a React component in our panel\nfunction WeekTracker() {\n  const [currentWeek, setCurrentWeek] = useState(1);\n  return (\n    <div className=\"week-tracker\">\n      <h2>Current Week: {currentWeek}</h2>\n      <WeekSelector onChange={setCurrentWeek} />\n    </div>\n  );\n}`\n    }, {\n      title: \"Framer Motion: Bringing the Interface to Life üé¨\",\n      text: \"Remember those static, boring panels in After Effects? Framer Motion changes everything. It's not just about making things move - it's about creating an experience that feels natural and responsive. Every button press, every panel transition, every notification comes alive with smooth animations.\",\n      features: [\"Smooth animations that respond to user interactions\", \"Gesture support (drag, swipe, pinch)\", \"Physics-based animations that feel natural\", \"Easy to implement with just a few lines of code\"],\n      demo: {\n        type: \"animation\",\n        description: \"Try hovering over this card to see Framer Motion in action!\"\n      }\n    }, {\n      title: \"Claude: The AI Development Partner That Changed Everything ü§ñ\",\n      text: \"Claude isn't just another AI chatbot - it's a revolutionary development partner that transformed how I approach coding. Created by Anthropic, it combines deep technical knowledge with an uncanny ability to understand context and nuance. What sets it apart is its ability to think through problems step by step, just like an experienced developer would.\",\n      experience: [\"Explains complex concepts in ways artists understand\", \"Helps debug tricky ExtendScript issues\", \"Suggests better ways to structure code\", \"Available 24/7 for any coding question\"],\n      conversation: {\n        me: \"How can I make my panel remember settings between AE sessions?\",\n        claude: \"Let's combine React's localStorage with ExtendScript's persistence. Here's how...\",\n        result: \"This simple conversation led to implementing persistent settings! üéâ\"\n      }\n    }, {\n      title: \"Cursor IDE: The Game-Changing Code Editor ‚ú®\",\n      text: \"Cursor IDE revolutionized how I write code. It's not just a code editor - it's like having an AI pair programmer who understands both your code and your intentions. Built on top of VSCode, it combines familiar editing features with powerful AI capabilities that feel almost magical.\",\n      features: [{\n        title: \"AI-Powered Completions\",\n        description: \"Suggests entire functions based on your comments\"\n      }, {\n        title: \"Context-Aware Intelligence\",\n        description: \"Understands both React and ExtendScript code\"\n      }, {\n        title: \"Real-Time Error Prevention\",\n        description: \"Catches issues before they become problems\"\n      }, {\n        title: \"Built-in AI Chat\",\n        description: \"Get help without leaving your editor\"\n      }],\n      impact: \"Using Cursor IDE cut my development time in half. Features that would have taken days now come together in hours!\"\n    }]\n  }, {\n    type: 'discord-section',\n    content: {\n      title: \"Automating Communication with Discord üí¨\",\n      text: \"One of the most exciting features I added was Discord integration. Instead of manually messaging team members about completed exports, I created a Discord bot that automatically sends notifications. The bot isn't just a simple message sender - it's a React application itself, with a custom interface for configuring messages and managing notifications.\",\n      features: [\"Custom message templates for different export types\", \"Real-time delivery notifications\", \"Preview of exported files\", \"Customizable notification settings\"],\n      buttons: [{\n        text: \"Try Discord Bot\",\n        url: \"/discord-bot\",\n        type: \"primary\",\n        underConstruction: true\n      }, {\n        text: \"View Bot Code\",\n        url: \"https://github.com/Themolx/AE-Discord-Bot\",\n        type: \"secondary\"\n      }]\n    }\n  }, {\n    type: 'tech-cards',\n    title: \"What Makes It Work\",\n    text: \"The panel combines several key technologies:\",\n    cards: [{\n      icon: \"‚öõÔ∏è\",\n      title: \"React Interface\",\n      description: \"A modern web framework that makes building interfaces feel natural\"\n    }, {\n      icon: \"üìÖ\",\n      title: \"Week Tracking\",\n      description: \"Automatically keeps track of production week numbers\"\n    }, {\n      icon: \"üì§\",\n      title: \"Smart Export\",\n      description: \"One-click export with automatic naming conventions\"\n    }, {\n      icon: \"ü§ñ\",\n      title: \"Discord Bot\",\n      description: \"Automatically notifies the team when exports are ready\"\n    }]\n  }, {\n    type: 'tech-deep-dive',\n    title: \"Let's Dive Deeper Into Each Technology\",\n    sections: [{\n      title: \"React: The Foundation of Modern Web Development ‚öõÔ∏è\",\n      content: \"React completely transformed how I approach building interfaces. Created by Facebook (now Meta), it's the same technology that powers Instagram and WhatsApp. But what makes it so special for After Effects panels?\\n\\nImagine building with LEGO - each piece (we call them components) can be reused and combined in different ways. My week number tracker? That's a component. Export settings? Another component. They all work together seamlessly.\\n\\nThe real magic happens with React's state management. When you change the week number, React automatically updates it everywhere in the panel. No more manual syncing or refreshing!\\n\\nBut the best part? The huge React community means there are thousands of pre-built components available. Need a color picker? Date selector? Chances are, someone's already built it.\",\n      code: `// Example of a React component in our panel\nfunction WeekTracker() {\n  const [currentWeek, setCurrentWeek] = useState(1);\n  \n  // This automatically updates everywhere when changed\n  const updateWeek = (newWeek) => {\n    setCurrentWeek(newWeek);\n    saveToAE(newWeek); // Syncs with After Effects\n  };\n  \n  return (\n    <div className=\"week-tracker\">\n      <h2>Current Week: {currentWeek}</h2>\n      <WeekSelector onChange={updateWeek} />\n    </div>\n  );\n}`\n    }, {\n      title: \"Claude: The AI Partner That Changed Everything ü§ñ\",\n      content: \"Claude isn't just another AI - it became my mentor, debugger, and coding partner. Created by Anthropic, it's an AI that truly understands both the technical and creative aspects of development.\\n\\nWhat makes Claude special is its ability to understand context. When I was stuck trying to connect React with ExtendScript (After Effects' scripting language), Claude didn't just give me code snippets - it explained the entire architecture, complete with examples and step-by-step breakdowns.\\n\\nIt's like having a senior developer available 24/7, but one who also understands the unique challenges of VFX work. When I hit performance issues with large compositions, Claude helped me implement progressive rendering that prevented crashes.\\n\\nThe best part? Claude explains things in ways that make sense to artists. No computer science degree required!\",\n      conversation: {\n        me: \"Hey Claude, my panel crashes when exporting large compositions...\",\n        claude: \"Let's analyze this step by step. First, we need to understand how After Effects handles memory during exports. We can break the export into smaller chunks...\",\n        result: \"This conversation led to implementing progressive rendering that prevented crashes! üéâ\"\n      }\n    }, {\n      title: \"Cursor IDE: The Smart Editor That Thinks Ahead ‚ú®\",\n      content: \"Cursor IDE revolutionized how I write code. Imagine an editor that not only understands your code but anticipates what you're trying to build. It's like having an AI pair programmer sitting right next to you.\\n\\nThe magic happens when you start typing. Cursor doesn't just autocomplete words - it understands entire patterns. Write a comment about what you want to achieve, and it suggests complete functions. It's particularly powerful when working with After Effects panel development because it understands both web technologies and Adobe's ExtendScript.\\n\\nBut it's not just about code completion. Cursor catches potential issues before they become problems, suggests performance optimizations, and even helps maintain consistent coding style. The built-in AI chat means you can get help without ever leaving your editor.\",\n      features: [\"AI-powered code completion that understands your project\", \"Real-time error detection and fixes\", \"Performance optimization suggestions\", \"Built-in AI chat for instant help\"]\n    }]\n  }, {\n    type: 'development-timeline',\n    content: {\n      title: \"The Development Journey üìà\",\n      stages: [{\n        date: \"March 1, 2024\",\n        title: \"The Idea\",\n        description: \"Started exploring After Effects panel development with AI tools\"\n      }, {\n        date: \"March 5, 2024\",\n        title: \"Basic Structure\",\n        description: \"Got the panel working with week number tracking\"\n      }, {\n        date: \"March 10, 2024\",\n        title: \"Export Automation\",\n        description: \"Added automatic file naming and export settings\"\n      }, {\n        date: \"March 15, 2024\",\n        title: \"Discord Integration\",\n        description: \"Connected everything to Discord for automated notifications\"\n      }]\n    }\n  }, {\n    type: 'github-journey',\n    content: {\n      title: \"Version Control with GitHub üìö\",\n      text: \"Just like with my Nuke tools, I decided to keep this project on GitHub from day one. Having version control for an After Effects panel turned out to be even more crucial as the project grew from a simple week number tracker to a full production automation tool.\",\n      sections: [{\n        title: \"Why GitHub for AE Panels?\",\n        points: [\"Track changes across panel versions\", \"Manage ExtendScript and React code in one place\", \"Easy deployment to multiple workstations\", \"Collaborate with other TDs\", \"Keep documentation with the code\"]\n      }]\n    }\n  }, {\n    type: 'cta-section',\n    content: {\n      title: \"Ready to Automate Your Workflow? üöÄ\",\n      description: \"Get started with the After Effects Production Panel and transform your daily tasks into automated workflows.\",\n      buttons: [{\n        text: \"Download Panel\",\n        url: \"https://github.com/Themolx/AE-Production-Panel/releases\",\n        type: \"primary\",\n        icon: \"‚¨áÔ∏è\"\n      }, {\n        text: \"View Source\",\n        url: \"https://github.com/Themolx/AE-Production-Panel\",\n        type: \"secondary\",\n        icon: \"üìù\"\n      }, {\n        text: \"Documentation\",\n        url: \"/docs\",\n        type: \"secondary\",\n        icon: \"üìö\",\n        underConstruction: true\n      }, {\n        text: \"Discord Community\",\n        url: \"/discord\",\n        type: \"secondary\",\n        icon: \"üí¨\",\n        underConstruction: true\n      }]\n    }\n  }, {\n    type: 'conclusion',\n    content: {\n      title: \"More Than Just a Panel üöÄ\",\n      sections: [{\n        text: \"Looking back, it's amazing how a simple idea to track week numbers evolved into something much bigger. What used to take up a significant portion of my day now happens automatically. But the real revelation wasn't just the time saved - it was discovering how accessible development has become with AI tools.\",\n        type: \"reflection\"\n      }, {\n        text: \"Key things I learned along the way:\",\n        points: [\"AI tools like Claude and Cursor IDE make development accessible to artists\", \"Small automations can add up to massive time savings\", \"You don't need to be a 'real programmer' to create useful tools\", \"Modern web technologies can enhance traditional VFX workflows\", \"Start small, but dream big - your tools can grow with your needs\"],\n        type: \"lessons\"\n      }, {\n        text: \"Want to explore the code or create your own panel?\",\n        links: [{\n          text: \"View on GitHub\",\n          url: \"https://github.com/Themolx/AE-Production-Panel\",\n          primary: true\n        }],\n        type: \"cta\"\n      }, {\n        text: \"Remember: Every repetitive task is an opportunity for automation. What will you automate next? üõ†Ô∏è\",\n        type: \"inspiration\"\n      }]\n    }\n  }, {\n    type: 'tech-deep-dive',\n    content: [{\n      title: \"React & Framer Motion: The Dynamic Duo ‚öõÔ∏è\",\n      text: \"React revolutionized how I think about building interfaces. Created by Facebook, it's not just another JavaScript library - it's a complete paradigm shift in how we build user interfaces. Instead of writing separate HTML, CSS, and JavaScript, React lets you create self-contained components that handle both appearance and behavior. Think of it like building with LEGO blocks - each piece is independent but works perfectly with others.\",\n      details: [\"Components are like mini-applications that manage their own state\", \"Virtual DOM makes updates lightning-fast\", \"Huge ecosystem of ready-to-use components\", \"Perfect for After Effects panels because of its component model\"],\n      framerDemo: {\n        title: \"See It In Action\",\n        description: \"This animated card uses Framer Motion, React's most popular animation library:\",\n        component: {\n          type: 'demo-card',\n          props: {\n            animate: true,\n            text: \"Hover me!\",\n            effects: [\"scale\", \"rotate\", \"color\"]\n          }\n        }\n      }\n    }]\n  }]\n};","map":{"version":3,"names":["aeCustomPanelPost","slug","title","date","author","tags","content","type","text","details","code","features","demo","description","experience","conversation","me","claude","result","impact","buttons","url","underConstruction","cards","icon","sections","stages","points","links","primary","framerDemo","component","props","animate","effects"],"sources":["/Users/martintomek/passive/src/data/blogPosts/aeCustomPanel.js"],"sourcesContent":["export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"üé® Creating a Smart After Effects Panel (With Help from AI)\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"ExtendScript\", \"React\", \"Automation\"],\n  content: [\n    {\n      type: 'personal-intro',\n      content: \"You know that feeling when you keep doing the same task over and over? That was me, manually tracking week numbers for deliveries, exporting files with specific naming conventions, and sending the same Discord messages to the same person. One day I thought - what if I could automate all of this? With the help of AI tools, I decided to create a custom After Effects panel that would handle all these tedious tasks automatically.\"\n    },\n    {\n      type: 'tech-explanation',\n      title: \"The Technologies That Made It Possible üõ†Ô∏è\",\n      content: [\n        {\n          title: \"React: Building Blocks for Modern Interfaces ‚öõÔ∏è\",\n          text: \"React completely changed how I think about building user interfaces. Created by Facebook (now Meta), it's the same technology behind Instagram and WhatsApp. But what makes it perfect for After Effects panels? Imagine building with LEGO - each piece (we call them components) can be reused and combined in different ways. My week number tracker? That's a component. Export settings? Another component. They all work together seamlessly.\",\n          details: [\n            \"Components are like smart building blocks that remember their state\",\n            \"When data changes (like the week number), everything updates automatically\",\n            \"Huge community means lots of pre-built components to use\",\n            \"Perfect for complex interfaces like production panels\"\n          ],\n          code: `// Example of a React component in our panel\nfunction WeekTracker() {\n  const [currentWeek, setCurrentWeek] = useState(1);\n  return (\n    <div className=\"week-tracker\">\n      <h2>Current Week: {currentWeek}</h2>\n      <WeekSelector onChange={setCurrentWeek} />\n    </div>\n  );\n}`\n        },\n        {\n          title: \"Framer Motion: Bringing the Interface to Life üé¨\",\n          text: \"Remember those static, boring panels in After Effects? Framer Motion changes everything. It's not just about making things move - it's about creating an experience that feels natural and responsive. Every button press, every panel transition, every notification comes alive with smooth animations.\",\n          features: [\n            \"Smooth animations that respond to user interactions\",\n            \"Gesture support (drag, swipe, pinch)\",\n            \"Physics-based animations that feel natural\",\n            \"Easy to implement with just a few lines of code\"\n          ],\n          demo: {\n            type: \"animation\",\n            description: \"Try hovering over this card to see Framer Motion in action!\"\n          }\n        },\n        {\n          title: \"Claude: The AI Development Partner That Changed Everything ü§ñ\",\n          text: \"Claude isn't just another AI chatbot - it's a revolutionary development partner that transformed how I approach coding. Created by Anthropic, it combines deep technical knowledge with an uncanny ability to understand context and nuance. What sets it apart is its ability to think through problems step by step, just like an experienced developer would.\",\n          experience: [\n            \"Explains complex concepts in ways artists understand\",\n            \"Helps debug tricky ExtendScript issues\",\n            \"Suggests better ways to structure code\",\n            \"Available 24/7 for any coding question\"\n          ],\n          conversation: {\n            me: \"How can I make my panel remember settings between AE sessions?\",\n            claude: \"Let's combine React's localStorage with ExtendScript's persistence. Here's how...\",\n            result: \"This simple conversation led to implementing persistent settings! üéâ\"\n          }\n        },\n        {\n          title: \"Cursor IDE: The Game-Changing Code Editor ‚ú®\",\n          text: \"Cursor IDE revolutionized how I write code. It's not just a code editor - it's like having an AI pair programmer who understands both your code and your intentions. Built on top of VSCode, it combines familiar editing features with powerful AI capabilities that feel almost magical.\",\n          features: [\n            {\n              title: \"AI-Powered Completions\",\n              description: \"Suggests entire functions based on your comments\"\n            },\n            {\n              title: \"Context-Aware Intelligence\",\n              description: \"Understands both React and ExtendScript code\"\n            },\n            {\n              title: \"Real-Time Error Prevention\",\n              description: \"Catches issues before they become problems\"\n            },\n            {\n              title: \"Built-in AI Chat\",\n              description: \"Get help without leaving your editor\"\n            }\n          ],\n          impact: \"Using Cursor IDE cut my development time in half. Features that would have taken days now come together in hours!\"\n        }\n      ]\n    },\n    {\n      type: 'discord-section',\n      content: {\n        title: \"Automating Communication with Discord üí¨\",\n        text: \"One of the most exciting features I added was Discord integration. Instead of manually messaging team members about completed exports, I created a Discord bot that automatically sends notifications. The bot isn't just a simple message sender - it's a React application itself, with a custom interface for configuring messages and managing notifications.\",\n        features: [\n          \"Custom message templates for different export types\",\n          \"Real-time delivery notifications\",\n          \"Preview of exported files\",\n          \"Customizable notification settings\"\n        ],\n        buttons: [\n          {\n            text: \"Try Discord Bot\",\n            url: \"/discord-bot\",\n            type: \"primary\",\n            underConstruction: true\n          },\n          {\n            text: \"View Bot Code\",\n            url: \"https://github.com/Themolx/AE-Discord-Bot\",\n            type: \"secondary\"\n          }\n        ]\n      }\n    },\n    {\n      type: 'tech-cards',\n      title: \"What Makes It Work\",\n      text: \"The panel combines several key technologies:\",\n      cards: [\n        {\n          icon: \"‚öõÔ∏è\",\n          title: \"React Interface\",\n          description: \"A modern web framework that makes building interfaces feel natural\"\n        },\n        {\n          icon: \"üìÖ\",\n          title: \"Week Tracking\",\n          description: \"Automatically keeps track of production week numbers\"\n        },\n        {\n          icon: \"üì§\",\n          title: \"Smart Export\",\n          description: \"One-click export with automatic naming conventions\"\n        },\n        {\n          icon: \"ü§ñ\",\n          title: \"Discord Bot\",\n          description: \"Automatically notifies the team when exports are ready\"\n        }\n      ]\n    },\n    {\n      type: 'tech-deep-dive',\n      title: \"Let's Dive Deeper Into Each Technology\",\n      sections: [\n        {\n          title: \"React: The Foundation of Modern Web Development ‚öõÔ∏è\",\n          content: \"React completely transformed how I approach building interfaces. Created by Facebook (now Meta), it's the same technology that powers Instagram and WhatsApp. But what makes it so special for After Effects panels?\\n\\nImagine building with LEGO - each piece (we call them components) can be reused and combined in different ways. My week number tracker? That's a component. Export settings? Another component. They all work together seamlessly.\\n\\nThe real magic happens with React's state management. When you change the week number, React automatically updates it everywhere in the panel. No more manual syncing or refreshing!\\n\\nBut the best part? The huge React community means there are thousands of pre-built components available. Need a color picker? Date selector? Chances are, someone's already built it.\",\n          code: `// Example of a React component in our panel\nfunction WeekTracker() {\n  const [currentWeek, setCurrentWeek] = useState(1);\n  \n  // This automatically updates everywhere when changed\n  const updateWeek = (newWeek) => {\n    setCurrentWeek(newWeek);\n    saveToAE(newWeek); // Syncs with After Effects\n  };\n  \n  return (\n    <div className=\"week-tracker\">\n      <h2>Current Week: {currentWeek}</h2>\n      <WeekSelector onChange={updateWeek} />\n    </div>\n  );\n}`\n        },\n        {\n          title: \"Claude: The AI Partner That Changed Everything ü§ñ\",\n          content: \"Claude isn't just another AI - it became my mentor, debugger, and coding partner. Created by Anthropic, it's an AI that truly understands both the technical and creative aspects of development.\\n\\nWhat makes Claude special is its ability to understand context. When I was stuck trying to connect React with ExtendScript (After Effects' scripting language), Claude didn't just give me code snippets - it explained the entire architecture, complete with examples and step-by-step breakdowns.\\n\\nIt's like having a senior developer available 24/7, but one who also understands the unique challenges of VFX work. When I hit performance issues with large compositions, Claude helped me implement progressive rendering that prevented crashes.\\n\\nThe best part? Claude explains things in ways that make sense to artists. No computer science degree required!\",\n          conversation: {\n            me: \"Hey Claude, my panel crashes when exporting large compositions...\",\n            claude: \"Let's analyze this step by step. First, we need to understand how After Effects handles memory during exports. We can break the export into smaller chunks...\",\n            result: \"This conversation led to implementing progressive rendering that prevented crashes! üéâ\"\n          }\n        },\n        {\n          title: \"Cursor IDE: The Smart Editor That Thinks Ahead ‚ú®\",\n          content: \"Cursor IDE revolutionized how I write code. Imagine an editor that not only understands your code but anticipates what you're trying to build. It's like having an AI pair programmer sitting right next to you.\\n\\nThe magic happens when you start typing. Cursor doesn't just autocomplete words - it understands entire patterns. Write a comment about what you want to achieve, and it suggests complete functions. It's particularly powerful when working with After Effects panel development because it understands both web technologies and Adobe's ExtendScript.\\n\\nBut it's not just about code completion. Cursor catches potential issues before they become problems, suggests performance optimizations, and even helps maintain consistent coding style. The built-in AI chat means you can get help without ever leaving your editor.\",\n          features: [\n            \"AI-powered code completion that understands your project\",\n            \"Real-time error detection and fixes\",\n            \"Performance optimization suggestions\",\n            \"Built-in AI chat for instant help\"\n          ]\n        }\n      ]\n    },\n    {\n      type: 'development-timeline',\n      content: {\n        title: \"The Development Journey üìà\",\n        stages: [\n          {\n            date: \"March 1, 2024\",\n            title: \"The Idea\",\n            description: \"Started exploring After Effects panel development with AI tools\"\n          },\n          {\n            date: \"March 5, 2024\",\n            title: \"Basic Structure\",\n            description: \"Got the panel working with week number tracking\"\n          },\n          {\n            date: \"March 10, 2024\",\n            title: \"Export Automation\",\n            description: \"Added automatic file naming and export settings\"\n          },\n          {\n            date: \"March 15, 2024\",\n            title: \"Discord Integration\",\n            description: \"Connected everything to Discord for automated notifications\"\n          }\n        ]\n      }\n    },\n    {\n      type: 'github-journey',\n      content: {\n        title: \"Version Control with GitHub üìö\",\n        text: \"Just like with my Nuke tools, I decided to keep this project on GitHub from day one. Having version control for an After Effects panel turned out to be even more crucial as the project grew from a simple week number tracker to a full production automation tool.\",\n        sections: [\n          {\n            title: \"Why GitHub for AE Panels?\",\n            points: [\n              \"Track changes across panel versions\",\n              \"Manage ExtendScript and React code in one place\",\n              \"Easy deployment to multiple workstations\",\n              \"Collaborate with other TDs\",\n              \"Keep documentation with the code\"\n            ]\n          }\n        ]\n      }\n    },\n    {\n      type: 'cta-section',\n      content: {\n        title: \"Ready to Automate Your Workflow? üöÄ\",\n        description: \"Get started with the After Effects Production Panel and transform your daily tasks into automated workflows.\",\n        buttons: [\n          {\n            text: \"Download Panel\",\n            url: \"https://github.com/Themolx/AE-Production-Panel/releases\",\n            type: \"primary\",\n            icon: \"‚¨áÔ∏è\"\n          },\n          {\n            text: \"View Source\",\n            url: \"https://github.com/Themolx/AE-Production-Panel\",\n            type: \"secondary\",\n            icon: \"üìù\"\n          },\n          {\n            text: \"Documentation\",\n            url: \"/docs\",\n            type: \"secondary\",\n            icon: \"üìö\",\n            underConstruction: true\n          },\n          {\n            text: \"Discord Community\",\n            url: \"/discord\",\n            type: \"secondary\",\n            icon: \"üí¨\",\n            underConstruction: true\n          }\n        ]\n      }\n    },\n    {\n      type: 'conclusion',\n      content: {\n        title: \"More Than Just a Panel üöÄ\",\n        sections: [\n          {\n            text: \"Looking back, it's amazing how a simple idea to track week numbers evolved into something much bigger. What used to take up a significant portion of my day now happens automatically. But the real revelation wasn't just the time saved - it was discovering how accessible development has become with AI tools.\",\n            type: \"reflection\"\n          },\n          {\n            text: \"Key things I learned along the way:\",\n            points: [\n              \"AI tools like Claude and Cursor IDE make development accessible to artists\",\n              \"Small automations can add up to massive time savings\",\n              \"You don't need to be a 'real programmer' to create useful tools\",\n              \"Modern web technologies can enhance traditional VFX workflows\",\n              \"Start small, but dream big - your tools can grow with your needs\"\n            ],\n            type: \"lessons\"\n          },\n          {\n            text: \"Want to explore the code or create your own panel?\",\n            links: [\n              {\n                text: \"View on GitHub\",\n                url: \"https://github.com/Themolx/AE-Production-Panel\",\n                primary: true\n              }\n            ],\n            type: \"cta\"\n          },\n          {\n            text: \"Remember: Every repetitive task is an opportunity for automation. What will you automate next? üõ†Ô∏è\",\n            type: \"inspiration\"\n          }\n        ]\n      }\n    },\n    {\n      type: 'tech-deep-dive',\n      content: [\n        {\n          title: \"React & Framer Motion: The Dynamic Duo ‚öõÔ∏è\",\n          text: \"React revolutionized how I think about building interfaces. Created by Facebook, it's not just another JavaScript library - it's a complete paradigm shift in how we build user interfaces. Instead of writing separate HTML, CSS, and JavaScript, React lets you create self-contained components that handle both appearance and behavior. Think of it like building with LEGO blocks - each piece is independent but works perfectly with others.\",\n          details: [\n            \"Components are like mini-applications that manage their own state\",\n            \"Virtual DOM makes updates lightning-fast\",\n            \"Huge ecosystem of ready-to-use components\",\n            \"Perfect for After Effects panels because of its component model\"\n          ],\n          framerDemo: {\n            title: \"See It In Action\",\n            description: \"This animated card uses Framer Motion, React's most popular animation library:\",\n            component: {\n              type: 'demo-card',\n              props: {\n                animate: true,\n                text: \"Hover me!\",\n                effects: [\"scale\", \"rotate\", \"color\"]\n              }\n            }\n          }\n        }\n      ]\n    }\n  ]\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}