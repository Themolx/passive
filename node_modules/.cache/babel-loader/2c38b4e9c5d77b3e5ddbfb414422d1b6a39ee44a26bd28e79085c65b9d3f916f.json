{"ast":null,"code":"export const pfxScriptsPost = {\n  title: \"ðŸ›  PFX Scripts: Building a Nuke Artist's Toolkit with AI\",\n  date: \"March 28, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"Nuke\", \"Python\", \"Automation\", \"AI\"],\n  content: [{\n    type: 'intro',\n    content: \"Every VFX artist has their own way of working in Nuke. Over time, I found myself repeating certain tasks - organizing light passes, setting up denoise compositions, managing render loads. Instead of accepting these repetitive tasks, I decided to automate them. With the help of AI, I created a collection of tools that now form the backbone of my daily workflow.\"\n  }, {\n    type: 'section',\n    title: \"The Tools\",\n    content: [{\n      title: \"Auto Light Setup\",\n      description: \"Automatically organizes and sets up light passes with proper naming conventions and merge operations\",\n      code: \"# Example code snippet\\ndef setupLightPasses():\\n    # Tool implementation\"\n    }, {\n      title: \"Denoise Manager\",\n      description: \"Intelligent denoise setup that analyzes input plates and suggests optimal settings\",\n      code: \"# Denoise configuration\\ndef configureDenoiser():\\n    # Implementation details\"\n    }, {\n      title: \"Render Load Balancer\",\n      description: \"Distributes render tasks efficiently across available resources\",\n      code: \"# Load balancing logic\\ndef balanceRenderLoad():\\n    # Distribution algorithm\"\n    }]\n  }]\n};","map":{"version":3,"names":["pfxScriptsPost","title","date","author","tags","content","type","description","code"],"sources":["/Users/martintomek/passive/src/data/blogPosts/pfxScripts.js"],"sourcesContent":["export const pfxScriptsPost = {\n  title: \"ðŸ›  PFX Scripts: Building a Nuke Artist's Toolkit with AI\",\n  date: \"March 28, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"Nuke\", \"Python\", \"Automation\", \"AI\"],\n  content: [\n    {\n      type: 'intro',\n      content: \"Every VFX artist has their own way of working in Nuke. Over time, I found myself repeating certain tasks - organizing light passes, setting up denoise compositions, managing render loads. Instead of accepting these repetitive tasks, I decided to automate them. With the help of AI, I created a collection of tools that now form the backbone of my daily workflow.\"\n    },\n    {\n      type: 'section',\n      title: \"The Tools\",\n      content: [\n        {\n          title: \"Auto Light Setup\",\n          description: \"Automatically organizes and sets up light passes with proper naming conventions and merge operations\",\n          code: \"# Example code snippet\\ndef setupLightPasses():\\n    # Tool implementation\"\n        },\n        {\n          title: \"Denoise Manager\",\n          description: \"Intelligent denoise setup that analyzes input plates and suggests optimal settings\",\n          code: \"# Denoise configuration\\ndef configureDenoiser():\\n    # Implementation details\"\n        },\n        {\n          title: \"Render Load Balancer\",\n          description: \"Distributes render tasks efficiently across available resources\",\n          code: \"# Load balancing logic\\ndef balanceRenderLoad():\\n    # Distribution algorithm\"\n        }\n      ]\n    }\n  ]\n}; "],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG;EAC5BC,KAAK,EAAE,0DAA0D;EACjEC,IAAI,EAAE,gBAAgB;EACtBC,MAAM,EAAE,cAAc;EACtBC,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,CAAC;EAC5CC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,OAAO;IACbD,OAAO,EAAE;EACX,CAAC,EACD;IACEC,IAAI,EAAE,SAAS;IACfL,KAAK,EAAE,WAAW;IAClBI,OAAO,EAAE,CACP;MACEJ,KAAK,EAAE,kBAAkB;MACzBM,WAAW,EAAE,sGAAsG;MACnHC,IAAI,EAAE;IACR,CAAC,EACD;MACEP,KAAK,EAAE,iBAAiB;MACxBM,WAAW,EAAE,oFAAoF;MACjGC,IAAI,EAAE;IACR,CAAC,EACD;MACEP,KAAK,EAAE,sBAAsB;MAC7BM,WAAW,EAAE,iEAAiE;MAC9EC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;AAEL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}