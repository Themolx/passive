{"ast":null,"code":"export const blogPosts = {\n  'nuke-grab-tool': {\n    title: \"üöÄ How I Built the Nuke Grab Tool (Without Being a Coding Expert)\",\n    date: \"November 9, 2024\",\n    author: \"Martin Tomek\",\n    tags: [\"Nuke\", \"Python\", \"Workflow\", \"Technical Guide\"],\n    content: [{\n      type: 'personal-intro',\n      content: \"I've always believed that great tools come from real needs. As a Nuke artist, I found myself constantly struggling with node placement - that delicate dance of getting nodes to line up perfectly. That's what led me to create the Nuke Grab Tool.\"\n    }, {\n      type: 'development-timeline',\n      content: {\n        title: \"The Evolution üìà\",\n        stages: [{\n          date: \"October 2, 2024\",\n          title: \"First Commit: The Birth\",\n          description: \"Created the basic functionality - nodes finally following orders without precise cursor placement!\"\n        }, {\n          date: \"October 3, 2024\",\n          title: \"Version 3.2\",\n          description: \"Fixed crucial scaling issues - now it works smoothly at any zoom level\"\n        }, {\n          date: \"October 6, 2024\",\n          title: \"Version 3.8\",\n          description: \"Added Ctrl+Z support and middle-click freeze functionality - making it production-ready\"\n        }]\n      }\n    }, {\n      type: 'github-journey',\n      content: {\n        title: \"Discovering GitHub: A Game-Changer üìö\",\n        text: \"As my collection of scripts grew, I needed a better way to manage versions and keep everything organized. That's when I started using GitHub. It's not just for professional developers - it's perfect for artists who code too!\",\n        sections: [{\n          title: \"Why GitHub?\",\n          points: [\"Track all changes to your scripts\", \"Access your tools from any machine\", \"Never lose your work\", \"Share with the community\", \"Collaborate with other artists\"]\n        }]\n      }\n    }]\n  },\n  'pfx-scripts': {\n    title: \"üõ†Ô∏è PFX Scripts: Building a Nuke Artist's Toolkit with AI\",\n    date: \"March 28, 2024\",\n    author: \"Martin Tomek\",\n    tags: [\"Nuke\", \"Python\", \"Automation\", \"AI\"],\n    content: [{\n      type: 'personal-intro',\n      content: \"Every VFX artist has their own way of working in Nuke. Over time, I found myself repeating certain tasks - organizing light passes, setting up denoise compositions, managing render loads. Instead of accepting these repetitive tasks, I decided to automate them. With the help of AI, I created a collection of tools that now form the backbone of my daily workflow.\"\n    }, {\n      type: 'journey-start',\n      content: {\n        title: \"The Birth of PFX Scripts üí°\",\n        text: \"Each tool in this collection started with a simple frustration - a repetitive task that needed automation. With AI as my coding partner, I tackled these challenges one by one, building a toolkit that makes Nuke work smarter.\"\n      }\n    }, {\n      type: 'tools-showcase',\n      content: {\n        title: \"The Tools That Changed My Workflow üîß\",\n        tools: [{\n          name: \"LightShuffler\",\n          description: \"Light Pass Organization\",\n          details: \"Automatically detects and organizes CG render passes, creating a clean setup of shuffle nodes for each light - saving hours of manual work.\"\n        }, {\n          name: \"NewDenoiseComp\",\n          description: \"One-Click Denoise Setup\",\n          details: \"Creates complete denoise node trees with optimal settings, including temporal processing and proper viewer setup.\"\n        }, {\n          name: \"ZDefocusChecker\",\n          description: \"DOF Consistency Guardian\",\n          details: \"Scans for PxF_ZDefocus nodes and highlights any inconsistent settings to prevent depth of field mismatches.\"\n        }, {\n          name: \"MaskCheckerGrade\",\n          description: \"Mask Channel Organization\",\n          details: \"Automatically creates organized node setups for mask channels with perfectly aligned Dot, Shuffle, and Grade nodes.\"\n        }, {\n          name: \"MaskCheckerPremult\",\n          description: \"Premultiplication Verification\",\n          details: \"Helps identify and fix issues with premultiplied masks before they cause problems in your comp.\"\n        }, {\n          name: \"ReduceNoiseBackdrop\",\n          description: \"Performance Optimization Helper\",\n          details: \"Creates red backdrops around Reduce Noise nodes for better organization and performance monitoring.\"\n        }]\n      }\n    }, {\n      type: 'conclusion',\n      content: {\n        title: \"Automating the Future üöÄ\",\n        sections: [{\n          text: \"What started as a few simple scripts has grown into a comprehensive toolkit that saves hours of work every week. Each tool represents a solution to a real problem I faced in production.\",\n          type: \"reflection\"\n        }, {\n          text: \"Ready to try these tools in your workflow?\",\n          links: [{\n            text: \"View on GitHub\",\n            url: \"https://github.com/Themolx/PFX\",\n            primary: true\n          }],\n          type: \"cta\"\n        }]\n      }\n    }]\n  }\n};","map":{"version":3,"names":["blogPosts","title","date","author","tags","content","type","stages","description","text","sections","points","tools","name","details","links","url","primary"],"sources":["/Users/martintomek/passive/src/data/blogPosts.js"],"sourcesContent":["export const blogPosts = {\n  'nuke-grab-tool': {\n    title: \"üöÄ How I Built the Nuke Grab Tool (Without Being a Coding Expert)\",\n    date: \"November 9, 2024\",\n    author: \"Martin Tomek\",\n    tags: [\"Nuke\", \"Python\", \"Workflow\", \"Technical Guide\"],\n    content: [\n      {\n        type: 'personal-intro',\n        content: \"I've always believed that great tools come from real needs. As a Nuke artist, I found myself constantly struggling with node placement - that delicate dance of getting nodes to line up perfectly. That's what led me to create the Nuke Grab Tool.\"\n      },\n      {\n        type: 'development-timeline',\n        content: {\n          title: \"The Evolution üìà\",\n          stages: [\n            {\n              date: \"October 2, 2024\",\n              title: \"First Commit: The Birth\",\n              description: \"Created the basic functionality - nodes finally following orders without precise cursor placement!\"\n            },\n            {\n              date: \"October 3, 2024\",\n              title: \"Version 3.2\",\n              description: \"Fixed crucial scaling issues - now it works smoothly at any zoom level\"\n            },\n            {\n              date: \"October 6, 2024\",\n              title: \"Version 3.8\",\n              description: \"Added Ctrl+Z support and middle-click freeze functionality - making it production-ready\"\n            }\n          ]\n        }\n      },\n      {\n        type: 'github-journey',\n        content: {\n          title: \"Discovering GitHub: A Game-Changer üìö\",\n          text: \"As my collection of scripts grew, I needed a better way to manage versions and keep everything organized. That's when I started using GitHub. It's not just for professional developers - it's perfect for artists who code too!\",\n          sections: [\n            {\n              title: \"Why GitHub?\",\n              points: [\n                \"Track all changes to your scripts\",\n                \"Access your tools from any machine\",\n                \"Never lose your work\",\n                \"Share with the community\",\n                \"Collaborate with other artists\"\n              ]\n            }\n          ]\n        }\n      }\n    ]\n  },\n  'pfx-scripts': {\n    title: \"üõ†Ô∏è PFX Scripts: Building a Nuke Artist's Toolkit with AI\",\n    date: \"March 28, 2024\",\n    author: \"Martin Tomek\",\n    tags: [\"Nuke\", \"Python\", \"Automation\", \"AI\"],\n    content: [\n      {\n        type: 'personal-intro',\n        content: \"Every VFX artist has their own way of working in Nuke. Over time, I found myself repeating certain tasks - organizing light passes, setting up denoise compositions, managing render loads. Instead of accepting these repetitive tasks, I decided to automate them. With the help of AI, I created a collection of tools that now form the backbone of my daily workflow.\"\n      },\n      {\n        type: 'journey-start',\n        content: {\n          title: \"The Birth of PFX Scripts üí°\",\n          text: \"Each tool in this collection started with a simple frustration - a repetitive task that needed automation. With AI as my coding partner, I tackled these challenges one by one, building a toolkit that makes Nuke work smarter.\"\n        }\n      },\n      {\n        type: 'tools-showcase',\n        content: {\n          title: \"The Tools That Changed My Workflow üîß\",\n          tools: [\n            {\n              name: \"LightShuffler\",\n              description: \"Light Pass Organization\",\n              details: \"Automatically detects and organizes CG render passes, creating a clean setup of shuffle nodes for each light - saving hours of manual work.\"\n            },\n            {\n              name: \"NewDenoiseComp\",\n              description: \"One-Click Denoise Setup\",\n              details: \"Creates complete denoise node trees with optimal settings, including temporal processing and proper viewer setup.\"\n            },\n            {\n              name: \"ZDefocusChecker\",\n              description: \"DOF Consistency Guardian\",\n              details: \"Scans for PxF_ZDefocus nodes and highlights any inconsistent settings to prevent depth of field mismatches.\"\n            },\n            {\n              name: \"MaskCheckerGrade\",\n              description: \"Mask Channel Organization\",\n              details: \"Automatically creates organized node setups for mask channels with perfectly aligned Dot, Shuffle, and Grade nodes.\"\n            },\n            {\n              name: \"MaskCheckerPremult\",\n              description: \"Premultiplication Verification\",\n              details: \"Helps identify and fix issues with premultiplied masks before they cause problems in your comp.\"\n            },\n            {\n              name: \"ReduceNoiseBackdrop\",\n              description: \"Performance Optimization Helper\",\n              details: \"Creates red backdrops around Reduce Noise nodes for better organization and performance monitoring.\"\n            }\n          ]\n        }\n      },\n      {\n        type: 'conclusion',\n        content: {\n          title: \"Automating the Future üöÄ\",\n          sections: [\n            {\n              text: \"What started as a few simple scripts has grown into a comprehensive toolkit that saves hours of work every week. Each tool represents a solution to a real problem I faced in production.\",\n              type: \"reflection\"\n            },\n            {\n              text: \"Ready to try these tools in your workflow?\",\n              links: [\n                {\n                  text: \"View on GitHub\",\n                  url: \"https://github.com/Themolx/PFX\",\n                  primary: true\n                }\n              ],\n              type: \"cta\"\n            }\n          ]\n        }\n      }\n    ]\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}