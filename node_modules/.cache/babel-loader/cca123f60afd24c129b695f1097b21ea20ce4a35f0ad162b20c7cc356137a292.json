{"ast":null,"code":"export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"Building a Production-Ready After Effects Panel with AI Assistance\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"Automation\", \"AI\", \"Development\"],\n  sections: [{\n    type: 'text',\n    content: \"As a VFX artist and TD, I'm always looking for ways to streamline our production pipeline. Recently, I embarked on an interesting journey: creating a custom After Effects panel using modern development tools and AI assistance. Here's how it went.\"\n  }, {\n    type: 'journey-start',\n    content: {\n      title: \"The Challenge 🎯\",\n      text: \"In our production pipeline, we had several manual tasks that were becoming time-consuming: tracking week numbers for deliveries, following specific naming conventions for exports, and sending repetitive Discord notifications. I decided to automate these processes with a custom After Effects panel.\"\n    }\n  }, {\n    type: 'dialogue-section',\n    content: {\n      title: \"Development Tools 🛠️\",\n      stages: [{\n        date: \"Step 1\",\n        title: \"AI Assistance with Claude & Cursor\",\n        description: \"I used two powerful AI tools: Claude for code assistance and problem-solving, and Cursor IDE - a code editor with built-in AI capabilities. These tools dramatically accelerated my development process.\"\n      }, {\n        date: \"Step 2\",\n        title: \"React.js Framework\",\n        description: \"For the panel's interface, I chose React.js - a JavaScript library that makes building user interfaces efficient and maintainable.\"\n      }, {\n        date: \"Step 3\",\n        title: \"Adobe CEP Integration\",\n        description: \"Adobe's Common Extensibility Platform (CEP) allowed me to bridge web technologies with After Effects functionality.\"\n      }]\n    }\n  }, {\n    type: 'text',\n    content: \"## Modern Development with AI\\n\\nUsing AI-powered tools changed my development workflow completely. Claude acts as an intelligent coding partner, while Cursor IDE provides real-time AI assistance during coding.\"\n  }, {\n    type: 'journey-start',\n    content: {\n      title: \"Key Features Implemented 🔑\",\n      text: `• Automated week number tracking for deliveries\n• Smart export system with consistent naming\n• Discord integration for automatic notifications\n• Settings persistence between sessions\n• User-friendly interface built with React`\n    }\n  }, {\n    type: 'text',\n    content: \"## Technical Implementation\\n\\nThe panel was built using React for the frontend and CEP to communicate with After Effects. Here's how the main features work:\"\n  }, {\n    type: 'code-block',\n    content: {\n      language: 'javascript',\n      code: `// Example of Discord notification system\nconst sendDiscordNotification = async (exportDetails) => {\n  const webhook = new Discord.WebhookClient(WEBHOOK_ID, WEBHOOK_TOKEN);\n  \n  await webhook.send({\n    content: \\`🎬 New Export Complete!\n    Project: \\${exportDetails.projectName}\n    Week: \\${exportDetails.weekNumber}\n    Status: Ready for Review\\`\n  });\n};`\n    }\n  }, {\n    type: 'journey-start',\n    content: {\n      title: \"Results and Impact 📈\",\n      text: \"The custom panel has significantly improved our workflow. What used to take 5-10 minutes of manual work per export now happens automatically in seconds. The Discord integration ensures immediate communication with the team.\"\n    }\n  }, {\n    type: 'text',\n    content: \"## Looking Forward\\n\\nThis project showed how modern development tools and AI assistance can create powerful production tools. I plan to expand the panel's capabilities and potentially share it with the After Effects community.\"\n  }]\n};","map":{"version":3,"names":["aeCustomPanelPost","slug","title","date","author","tags","sections","type","content","text","stages","description","language","code"],"sources":["/Users/martintomek/passive/src/data/blogPosts/aeCustomPanel.js"],"sourcesContent":["export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"Building a Production-Ready After Effects Panel with AI Assistance\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"Automation\", \"AI\", \"Development\"],\n  sections: [\n    {\n      type: 'text',\n      content: \"As a VFX artist and TD, I'm always looking for ways to streamline our production pipeline. Recently, I embarked on an interesting journey: creating a custom After Effects panel using modern development tools and AI assistance. Here's how it went.\"\n    },\n    {\n      type: 'journey-start',\n      content: {\n        title: \"The Challenge 🎯\",\n        text: \"In our production pipeline, we had several manual tasks that were becoming time-consuming: tracking week numbers for deliveries, following specific naming conventions for exports, and sending repetitive Discord notifications. I decided to automate these processes with a custom After Effects panel.\"\n      }\n    },\n    {\n      type: 'dialogue-section',\n      content: {\n        title: \"Development Tools 🛠️\",\n        stages: [\n          {\n            date: \"Step 1\",\n            title: \"AI Assistance with Claude & Cursor\",\n            description: \"I used two powerful AI tools: Claude for code assistance and problem-solving, and Cursor IDE - a code editor with built-in AI capabilities. These tools dramatically accelerated my development process.\"\n          },\n          {\n            date: \"Step 2\",\n            title: \"React.js Framework\",\n            description: \"For the panel's interface, I chose React.js - a JavaScript library that makes building user interfaces efficient and maintainable.\"\n          },\n          {\n            date: \"Step 3\",\n            title: \"Adobe CEP Integration\",\n            description: \"Adobe's Common Extensibility Platform (CEP) allowed me to bridge web technologies with After Effects functionality.\"\n          }\n        ]\n      }\n    },\n    {\n      type: 'text',\n      content: \"## Modern Development with AI\\n\\nUsing AI-powered tools changed my development workflow completely. Claude acts as an intelligent coding partner, while Cursor IDE provides real-time AI assistance during coding.\"\n    },\n    {\n      type: 'journey-start',\n      content: {\n        title: \"Key Features Implemented 🔑\",\n        text: `• Automated week number tracking for deliveries\n• Smart export system with consistent naming\n• Discord integration for automatic notifications\n• Settings persistence between sessions\n• User-friendly interface built with React`\n      }\n    },\n    {\n      type: 'text',\n      content: \"## Technical Implementation\\n\\nThe panel was built using React for the frontend and CEP to communicate with After Effects. Here's how the main features work:\"\n    },\n    {\n      type: 'code-block',\n      content: {\n        language: 'javascript',\n        code: `// Example of Discord notification system\nconst sendDiscordNotification = async (exportDetails) => {\n  const webhook = new Discord.WebhookClient(WEBHOOK_ID, WEBHOOK_TOKEN);\n  \n  await webhook.send({\n    content: \\`🎬 New Export Complete!\n    Project: \\${exportDetails.projectName}\n    Week: \\${exportDetails.weekNumber}\n    Status: Ready for Review\\`\n  });\n};`\n      }\n    },\n    {\n      type: 'journey-start',\n      content: {\n        title: \"Results and Impact 📈\",\n        text: \"The custom panel has significantly improved our workflow. What used to take 5-10 minutes of manual work per export now happens automatically in seconds. The Discord integration ensures immediate communication with the team.\"\n      }\n    },\n    {\n      type: 'text',\n      content: \"## Looking Forward\\n\\nThis project showed how modern development tools and AI assistance can create powerful production tools. I plan to expand the panel's capabilities and potentially share it with the After Effects community.\"\n    }\n  ]\n};\n  "],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG;EAC/BC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE,oEAAoE;EAC3EC,IAAI,EAAE,gBAAgB;EACtBC,MAAM,EAAE,cAAc;EACtBC,IAAI,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,IAAI,EAAE,aAAa,CAAC;EAC1DC,QAAQ,EAAE,CACR;IACEC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAE;MACPN,KAAK,EAAE,kBAAkB;MACzBO,IAAI,EAAE;IACR;EACF,CAAC,EACD;IACEF,IAAI,EAAE,kBAAkB;IACxBC,OAAO,EAAE;MACPN,KAAK,EAAE,uBAAuB;MAC9BQ,MAAM,EAAE,CACN;QACEP,IAAI,EAAE,QAAQ;QACdD,KAAK,EAAE,oCAAoC;QAC3CS,WAAW,EAAE;MACf,CAAC,EACD;QACER,IAAI,EAAE,QAAQ;QACdD,KAAK,EAAE,oBAAoB;QAC3BS,WAAW,EAAE;MACf,CAAC,EACD;QACER,IAAI,EAAE,QAAQ;QACdD,KAAK,EAAE,uBAAuB;QAC9BS,WAAW,EAAE;MACf,CAAC;IAEL;EACF,CAAC,EACD;IACEJ,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAE;MACPN,KAAK,EAAE,6BAA6B;MACpCO,IAAI,EAAE;AACd;AACA;AACA;AACA;IACM;EACF,CAAC,EACD;IACEF,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAE;MACPI,QAAQ,EAAE,YAAY;MACtBC,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACM;EACF,CAAC,EACD;IACEN,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAE;MACPN,KAAK,EAAE,uBAAuB;MAC9BO,IAAI,EAAE;IACR;EACF,CAAC,EACD;IACEF,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACX,CAAC;AAEL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}