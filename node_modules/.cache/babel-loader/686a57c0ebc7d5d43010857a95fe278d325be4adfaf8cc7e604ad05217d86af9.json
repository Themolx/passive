{"ast":null,"code":"var _jsxFileName = \"/Users/martintomek/passive/src/pages/BlogPost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport DownloadButton from '../components/blog/DownloadButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogPost() {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const blogPosts = {\n    'nuke-advanced-grab-tool': {\n      title: \"Transform Your Compositing Workflow with Nuke Advanced Grab Tool v3.8\",\n      date: \"November 9, 2024\",\n      author: \"Martin Tomek\",\n      tags: [\"Nuke\", \"Python\", \"Workflow\", \"Technical Guide\"],\n      videoId: \"your-video-id-6\",\n      content: [{\n        type: 'paragraph',\n        content: \"In the fast-paced realm of visual effects and compositing, efficiency and precision are not just advantages—they're necessities. As projects grow in complexity, managing the Node Graph in Nuke can become a daunting task. Today, we're introducing the Nuke Advanced Grab Tool v3.8, a transformative script designed to elevate your node manipulation capabilities.\"\n      }, {\n        type: 'download-section',\n        content: {\n          nukepedia: \"https://www.nukepedia.com/python/nodegraph/nuke-grab-tool\",\n          github: \"https://github.com/yourusername/NukeGrabTool\"\n        }\n      }, {\n        type: 'video-demo',\n        videoId: \"your-video-id-6\"\n      }, {\n        type: 'heading',\n        content: \"What is the Advanced Grab Tool?\"\n      }, {\n        type: 'paragraph',\n        content: \"The Advanced Grab Tool is a Python script that enhances Nuke's node movement behavior, offering greater control and efficiency in your workflow. Inspired by Blender's Grab Tool, this script allows you to move nodes, input trees, or entire connected node trees with unprecedented ease and precision.\"\n      }, {\n        type: 'heading',\n        content: \"Key Features\"\n      }, {\n        type: 'paragraph',\n        content: \"• Standard Grab (E): Move selected nodes\\n• Input Tree Grab (Ctrl+Alt+E): Move selected nodes and upstream dependencies\\n• Full Tree Grab (Ctrl+E): Move entire connected node tree\\n• Axis Locking: Lock movement to X or Y axis\\n• Zoom-Level Handling: Consistent movement regardless of zoom level\\n• Movement Freezing: Hold middle mouse button or Alt + Left-click to freeze\\n• Undo Support: Fully integrated with Nuke's undo system\"\n      }, {\n        type: 'heading',\n        content: \"Real-World Applications\"\n      }, {\n        type: 'paragraph',\n        content: \"Imagine working on a complex compositing project with hundreds of nodes. You need to reorganize your keying setup while maintaining all the connections to your grain, grade, and output nodes. With the Advanced Grab Tool, simply select your key nodes, use Input Tree Grab, and move everything together—no more tedious manual reorganization or risk of breaking connections.\"\n      }, {\n        type: 'heading',\n        content: \"Installation Guide\"\n      }, {\n        type: 'paragraph',\n        content: \"1. Download NukeGrabTool.py from our GitHub repository\\n2. Place in your .nuke directory (~/nuke/ on Linux/Mac, %userprofile%/.nuke/ on Windows)\\n3. Add 'import NukeGrabTool' to your menu.py\\n4. Restart Nuke to activate the tool\"\n      }, {\n        type: 'heading',\n        content: \"Using the Tool\"\n      }, {\n        type: 'paragraph',\n        content: \"1. Select your nodes in the Node Graph\\n2. Press 'E' for standard grab mode\\n3. Move your nodes with the mouse\\n4. Press 'Z' or 'Y' to lock movement to an axis\\n5. Click or press 'E' again to confirm placement\\n6. Press 'Esc' to cancel the operation\"\n      }, {\n        type: 'heading',\n        content: \"System Requirements\"\n      }, {\n        type: 'paragraph',\n        content: \"• Nuke 12.1 or newer (required for PySide2 compatibility)\\n• Compatible with Windows, macOS, and Linux\\n• Minimal system overhead—works smoothly even with complex node trees\"\n      }, {\n        type: 'heading',\n        content: \"Pro Tips\"\n      }, {\n        type: 'paragraph',\n        content: \"• Use Full Tree Grab (Ctrl+E) when reorganizing entire effect chains\\n• Combine with axis locking for perfect vertical or horizontal alignment\\n• Customize shortcuts in menu.py to match your workflow\\n• Keep your node trees organized by color-coding different sections\"\n      }, {\n        type: 'heading',\n        content: \"Future Development\"\n      }, {\n        type: 'paragraph',\n        content: \"We're actively working on new features including:\\n• Snap-to-grid functionality\\n• Custom alignment guides\\n• Enhanced multi-selection tools\\n• Integration with popular node presets\"\n      }, {\n        type: 'heading',\n        content: \"Community Support\"\n      }, {\n        type: 'paragraph',\n        content: \"Join our growing community of compositing artists using the Advanced Grab Tool. Share your experiences, suggest improvements, or contribute to the development on our GitHub repository. Your feedback helps shape the future of this tool.\"\n      }, {\n        type: 'heading',\n        content: \"Get Started\"\n      }, {\n        type: 'paragraph',\n        content: \"Transform your Nuke workflow today. Download the Advanced Grab Tool from our GitHub repository and join the community of artists who are already benefiting from enhanced node manipulation capabilities.\\n\\nHappy compositing!\"\n      }, {\n        type: 'heading',\n        content: \"Development Journey with GitHub and Claude AI\"\n      }, {\n        type: 'paragraph',\n        content: \"The Nuke Advanced Grab Tool started as a simple script and evolved through iterative development using GitHub and Claude AI. Here's the journey:\"\n      }, {\n        type: 'timeline',\n        content: [{\n          date: \"October 2, 2024\",\n          title: \"Initial Commit\",\n          description: \"Created the basic grab functionality using Claude AI to generate the initial code structure. The first version was tested directly in Nuke's Script Editor.\"\n        }, {\n          date: \"October 3, 2024\",\n          title: \"Version 3.2\",\n          description: \"Added core features like input tree selection and proper zoom handling. Claude helped debug PySide2 integration issues.\"\n        }, {\n          date: \"October 6, 2024\",\n          title: \"Version 3.8\",\n          description: \"Implemented undo functionality, middle-click freeze, and refined movement behavior based on user feedback.\"\n        }]\n      }, {\n        type: 'development-workflow',\n        content: {\n          title: \"Development Workflow\",\n          steps: [{\n            heading: \"1. Script Editor Prototyping\",\n            content: \"Initial development happens in Nuke's Script Editor. This allows for immediate testing and iteration of new features.\"\n          }, {\n            heading: \"2. AI-Assisted Development\",\n            content: \"Claude AI helps with code structure, debugging, and implementing complex features. Example conversation:\\n\\nMe: 'How can I implement undo functionality for node movement?'\\nClaude: 'Use nuke.Undo().begin() and end() to wrap the movement operations...'\"\n          }, {\n            heading: \"3. GitHub Integration\",\n            content: \"Each working version is committed to GitHub, creating a clear development history and making it easy to track changes and improvements.\"\n          }]\n        }\n      }, {\n        type: 'code-sample',\n        content: {\n          title: \"Example Development Process\",\n          description: \"Here's how a typical feature is developed:\",\n          code: `# 1. Test in Script Editor\nimport nuke\ndef test_grab():\n    selected = nuke.selectedNodes()\n    print(\"Testing grab with:\", selected)\n\n# 2. Implement with Claude's help\nclass AdvancedGrabTool(QtCore.QObject):\n    def __init__(self):\n        super(AdvancedGrabTool, self).__init__()\n        self.grab_active = False\n\n# 3. Commit to GitHub\n# git add NukeGrabTool.py\n# git commit -m \"Added grab functionality\"\n# git push origin main`\n        }\n      }, {\n        type: 'resources',\n        content: {\n          title: \"Resources\",\n          links: [{\n            text: \"Download from Nukepedia\",\n            url: \"https://www.nukepedia.com/python/nodegraph/nuke-grab-tool\",\n            icon: \"nukepedia\"\n          }, {\n            text: \"GitHub Repository\",\n            url: \"https://github.com/Themolx/NukeScripts\",\n            icon: \"github\"\n          }]\n        }\n      }]\n    }\n  };\n  const post = blogPosts[slug];\n  const renderContent = content => {\n    switch (content.type) {\n      case 'paragraph':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 leading-relaxed mb-6\",\n          children: content.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 16\n        }, this);\n      case 'heading':\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-white mt-12 mb-6\",\n          children: content.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 16\n        }, this);\n      case 'download-section':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row gap-4 my-8\",\n          children: [/*#__PURE__*/_jsxDEV(DownloadButton, {\n            url: content.content.nukepedia,\n            text: \"Download from Nukepedia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n            url: content.content.github,\n            text: \"View on GitHub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this);\n      case 'video-demo':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aspect-video w-full rounded-lg overflow-hidden my-8\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: `https://www.youtube.com/embed/${content.videoId}`,\n            className: \"w-full h-full\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this);\n      case 'steps':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6 my-8\",\n          children: content.content.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/5 rounded-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-purple-400 mb-3\",\n              children: step.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300 whitespace-pre-line\",\n              children: step.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this);\n      case 'code-example':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: content.content.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-black/50 p-4 rounded-lg overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-sm text-gray-300\",\n              children: content.content.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this);\n      case 'try-yourself':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-purple-900/20 rounded-lg p-6 my-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: content.content.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-decimal list-inside space-y-2 mb-6\",\n            children: content.content.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"text-gray-300\",\n              children: step\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-black/50 p-4 rounded-lg overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-sm text-gray-300\",\n              children: content.content.sampleCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-24\",\n      children: \"Post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.article, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    className: \"max-w-4xl mx-auto px-4 py-24\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-purple-400\",\n        children: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mt-2 mb-4\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"By \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: post.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm bg-white/10 px-3 py-1 rounded-full\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prose prose-invert max-w-none\",\n      children: post.content.map((section, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          delay: index * 0.1\n        },\n        children: renderContent(section)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogPost, \"DpOdpe+T7d3Ytb7f6neHj0L13w0=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useParams","motion","DownloadButton","jsxDEV","_jsxDEV","BlogPost","_s","slug","blogPosts","title","date","author","tags","videoId","content","type","nukepedia","github","description","steps","heading","code","links","text","url","icon","post","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","allowFullScreen","map","step","index","sampleCode","article","initial","opacity","animate","exit","tag","section","div","y","transition","delay","_c","$RefreshReg$"],"sources":["/Users/martintomek/passive/src/pages/BlogPost.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport DownloadButton from '../components/blog/DownloadButton';\n\nfunction BlogPost() {\n  const { slug } = useParams();\n\n  const blogPosts = {\n    'nuke-advanced-grab-tool': {\n      title: \"Transform Your Compositing Workflow with Nuke Advanced Grab Tool v3.8\",\n      date: \"November 9, 2024\",\n      author: \"Martin Tomek\",\n      tags: [\"Nuke\", \"Python\", \"Workflow\", \"Technical Guide\"],\n      videoId: \"your-video-id-6\",\n      content: [\n        {\n          type: 'paragraph',\n          content: \"In the fast-paced realm of visual effects and compositing, efficiency and precision are not just advantages—they're necessities. As projects grow in complexity, managing the Node Graph in Nuke can become a daunting task. Today, we're introducing the Nuke Advanced Grab Tool v3.8, a transformative script designed to elevate your node manipulation capabilities.\"\n        },\n        {\n          type: 'download-section',\n          content: {\n            nukepedia: \"https://www.nukepedia.com/python/nodegraph/nuke-grab-tool\",\n            github: \"https://github.com/yourusername/NukeGrabTool\"\n          }\n        },\n        {\n          type: 'video-demo',\n          videoId: \"your-video-id-6\"\n        },\n        {\n          type: 'heading',\n          content: \"What is the Advanced Grab Tool?\"\n        },\n        {\n          type: 'paragraph',\n          content: \"The Advanced Grab Tool is a Python script that enhances Nuke's node movement behavior, offering greater control and efficiency in your workflow. Inspired by Blender's Grab Tool, this script allows you to move nodes, input trees, or entire connected node trees with unprecedented ease and precision.\"\n        },\n        {\n          type: 'heading',\n          content: \"Key Features\"\n        },\n        {\n          type: 'paragraph',\n          content: \"• Standard Grab (E): Move selected nodes\\n• Input Tree Grab (Ctrl+Alt+E): Move selected nodes and upstream dependencies\\n• Full Tree Grab (Ctrl+E): Move entire connected node tree\\n• Axis Locking: Lock movement to X or Y axis\\n• Zoom-Level Handling: Consistent movement regardless of zoom level\\n• Movement Freezing: Hold middle mouse button or Alt + Left-click to freeze\\n• Undo Support: Fully integrated with Nuke's undo system\"\n        },\n        {\n          type: 'heading',\n          content: \"Real-World Applications\"\n        },\n        {\n          type: 'paragraph',\n          content: \"Imagine working on a complex compositing project with hundreds of nodes. You need to reorganize your keying setup while maintaining all the connections to your grain, grade, and output nodes. With the Advanced Grab Tool, simply select your key nodes, use Input Tree Grab, and move everything together—no more tedious manual reorganization or risk of breaking connections.\"\n        },\n        {\n          type: 'heading',\n          content: \"Installation Guide\"\n        },\n        {\n          type: 'paragraph',\n          content: \"1. Download NukeGrabTool.py from our GitHub repository\\n2. Place in your .nuke directory (~/nuke/ on Linux/Mac, %userprofile%/.nuke/ on Windows)\\n3. Add 'import NukeGrabTool' to your menu.py\\n4. Restart Nuke to activate the tool\"\n        },\n        {\n          type: 'heading',\n          content: \"Using the Tool\"\n        },\n        {\n          type: 'paragraph',\n          content: \"1. Select your nodes in the Node Graph\\n2. Press 'E' for standard grab mode\\n3. Move your nodes with the mouse\\n4. Press 'Z' or 'Y' to lock movement to an axis\\n5. Click or press 'E' again to confirm placement\\n6. Press 'Esc' to cancel the operation\"\n        },\n        {\n          type: 'heading',\n          content: \"System Requirements\"\n        },\n        {\n          type: 'paragraph',\n          content: \"• Nuke 12.1 or newer (required for PySide2 compatibility)\\n• Compatible with Windows, macOS, and Linux\\n• Minimal system overhead—works smoothly even with complex node trees\"\n        },\n        {\n          type: 'heading',\n          content: \"Pro Tips\"\n        },\n        {\n          type: 'paragraph',\n          content: \"• Use Full Tree Grab (Ctrl+E) when reorganizing entire effect chains\\n• Combine with axis locking for perfect vertical or horizontal alignment\\n• Customize shortcuts in menu.py to match your workflow\\n• Keep your node trees organized by color-coding different sections\"\n        },\n        {\n          type: 'heading',\n          content: \"Future Development\"\n        },\n        {\n          type: 'paragraph',\n          content: \"We're actively working on new features including:\\n• Snap-to-grid functionality\\n• Custom alignment guides\\n• Enhanced multi-selection tools\\n• Integration with popular node presets\"\n        },\n        {\n          type: 'heading',\n          content: \"Community Support\"\n        },\n        {\n          type: 'paragraph',\n          content: \"Join our growing community of compositing artists using the Advanced Grab Tool. Share your experiences, suggest improvements, or contribute to the development on our GitHub repository. Your feedback helps shape the future of this tool.\"\n        },\n        {\n          type: 'heading',\n          content: \"Get Started\"\n        },\n        {\n          type: 'paragraph',\n          content: \"Transform your Nuke workflow today. Download the Advanced Grab Tool from our GitHub repository and join the community of artists who are already benefiting from enhanced node manipulation capabilities.\\n\\nHappy compositing!\"\n        },\n        {\n          type: 'heading',\n          content: \"Development Journey with GitHub and Claude AI\"\n        },\n        {\n          type: 'paragraph',\n          content: \"The Nuke Advanced Grab Tool started as a simple script and evolved through iterative development using GitHub and Claude AI. Here's the journey:\"\n        },\n        {\n          type: 'timeline',\n          content: [\n            {\n              date: \"October 2, 2024\",\n              title: \"Initial Commit\",\n              description: \"Created the basic grab functionality using Claude AI to generate the initial code structure. The first version was tested directly in Nuke's Script Editor.\"\n            },\n            {\n              date: \"October 3, 2024\",\n              title: \"Version 3.2\",\n              description: \"Added core features like input tree selection and proper zoom handling. Claude helped debug PySide2 integration issues.\"\n            },\n            {\n              date: \"October 6, 2024\",\n              title: \"Version 3.8\",\n              description: \"Implemented undo functionality, middle-click freeze, and refined movement behavior based on user feedback.\"\n            }\n          ]\n        },\n        {\n          type: 'development-workflow',\n          content: {\n            title: \"Development Workflow\",\n            steps: [\n              {\n                heading: \"1. Script Editor Prototyping\",\n                content: \"Initial development happens in Nuke's Script Editor. This allows for immediate testing and iteration of new features.\"\n              },\n              {\n                heading: \"2. AI-Assisted Development\",\n                content: \"Claude AI helps with code structure, debugging, and implementing complex features. Example conversation:\\n\\nMe: 'How can I implement undo functionality for node movement?'\\nClaude: 'Use nuke.Undo().begin() and end() to wrap the movement operations...'\"\n              },\n              {\n                heading: \"3. GitHub Integration\",\n                content: \"Each working version is committed to GitHub, creating a clear development history and making it easy to track changes and improvements.\"\n              }\n            ]\n          }\n        },\n        {\n          type: 'code-sample',\n          content: {\n            title: \"Example Development Process\",\n            description: \"Here's how a typical feature is developed:\",\n            code: `# 1. Test in Script Editor\nimport nuke\ndef test_grab():\n    selected = nuke.selectedNodes()\n    print(\"Testing grab with:\", selected)\n\n# 2. Implement with Claude's help\nclass AdvancedGrabTool(QtCore.QObject):\n    def __init__(self):\n        super(AdvancedGrabTool, self).__init__()\n        self.grab_active = False\n\n# 3. Commit to GitHub\n# git add NukeGrabTool.py\n# git commit -m \"Added grab functionality\"\n# git push origin main`\n          }\n        },\n        {\n          type: 'resources',\n          content: {\n            title: \"Resources\",\n            links: [\n              {\n                text: \"Download from Nukepedia\",\n                url: \"https://www.nukepedia.com/python/nodegraph/nuke-grab-tool\",\n                icon: \"nukepedia\"\n              },\n              {\n                text: \"GitHub Repository\",\n                url: \"https://github.com/Themolx/NukeScripts\",\n                icon: \"github\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  };\n\n  const post = blogPosts[slug];\n\n  const renderContent = (content) => {\n    switch (content.type) {\n      case 'paragraph':\n        return <p className=\"text-gray-300 leading-relaxed mb-6\">{content.content}</p>;\n        \n      case 'heading':\n        return <h2 className=\"text-2xl font-bold text-white mt-12 mb-6\">{content.content}</h2>;\n        \n      case 'download-section':\n        return (\n          <div className=\"flex flex-col sm:flex-row gap-4 my-8\">\n            <DownloadButton \n              url={content.content.nukepedia}\n              text=\"Download from Nukepedia\"\n            />\n            <DownloadButton \n              url={content.content.github}\n              text=\"View on GitHub\"\n            />\n          </div>\n        );\n        \n      case 'video-demo':\n        return (\n          <div className=\"aspect-video w-full rounded-lg overflow-hidden my-8\">\n            <iframe\n              src={`https://www.youtube.com/embed/${content.videoId}`}\n              className=\"w-full h-full\"\n              allowFullScreen\n            />\n          </div>\n        );\n        \n      case 'steps':\n        return (\n          <div className=\"space-y-6 my-8\">\n            {content.content.map((step, index) => (\n              <div key={index} className=\"bg-white/5 rounded-lg p-6\">\n                <h3 className=\"text-xl font-semibold text-purple-400 mb-3\">\n                  {step.title}\n                </h3>\n                <p className=\"text-gray-300 whitespace-pre-line\">\n                  {step.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        );\n        \n      case 'code-example':\n        return (\n          <div className=\"my-8\">\n            <h3 className=\"text-xl font-semibold mb-4\">{content.content.title}</h3>\n            <pre className=\"bg-black/50 p-4 rounded-lg overflow-x-auto\">\n              <code className=\"text-sm text-gray-300\">\n                {content.content.code}\n              </code>\n            </pre>\n          </div>\n        );\n        \n      case 'try-yourself':\n        return (\n          <div className=\"bg-purple-900/20 rounded-lg p-6 my-8\">\n            <h3 className=\"text-xl font-semibold mb-4\">{content.content.title}</h3>\n            <ul className=\"list-decimal list-inside space-y-2 mb-6\">\n              {content.content.steps.map((step, index) => (\n                <li key={index} className=\"text-gray-300\">{step}</li>\n              ))}\n            </ul>\n            <pre className=\"bg-black/50 p-4 rounded-lg overflow-x-auto\">\n              <code className=\"text-sm text-gray-300\">\n                {content.content.sampleCode}\n              </code>\n            </pre>\n          </div>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  if (!post) {\n    return <div className=\"container mx-auto px-4 py-24\">Post not found</div>;\n  }\n\n  return (\n    <motion.article\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"max-w-4xl mx-auto px-4 py-24\"\n    >\n      <div className=\"mb-8\">\n        <span className=\"text-purple-400\">{post.date}</span>\n        <h1 className=\"text-4xl font-bold mt-2 mb-4\">{post.title}</h1>\n        <div className=\"flex items-center gap-2 text-gray-400\">\n          <span>By {post.author}</span>\n          <span>•</span>\n          <div className=\"flex gap-2\">\n            {post.tags.map(tag => (\n              <span key={tag} className=\"text-sm bg-white/10 px-3 py-1 rounded-full\">\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"prose prose-invert max-w-none\">\n        {post.content.map((section, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n          >\n            {renderContent(section)}\n          </motion.div>\n        ))}\n      </div>\n    </motion.article>\n  );\n}\n\nexport default BlogPost; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}