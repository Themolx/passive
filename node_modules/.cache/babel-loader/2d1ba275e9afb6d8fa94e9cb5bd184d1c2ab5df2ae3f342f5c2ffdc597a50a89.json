{"ast":null,"code":"export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"Building a Custom Panel for After Effects with AI\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"Automation\", \"VFX\", \"Workflow\", \"Discord\"],\n  content: [{\n    type: 'intro',\n    content: `As a Compositing TD, I wanted to automate repetitive tasks in After Effects. \n        Here's how I combined different tools to create a powerful automation solution. Each tool\n        played a crucial role in making this project successful.`\n  }, {\n    type: 'section',\n    title: \"ü§ñ Claude: The AI Assistant\",\n    content: `My journey started with Claude AI. As someone who isn't a professional programmer, \n        I discovered that Claude could:\n        ‚Ä¢ Break down complex problems into manageable steps\n        ‚Ä¢ Explain After Effects' scripting API in simple terms\n        ‚Ä¢ Suggest best practices and optimizations\n        ‚Ä¢ Help debug issues when I got stuck\n        \n        The key was asking specific questions and iteratively improving the code. Claude became\n        like a patient mentor, helping me understand not just what to code, but why certain\n        approaches work better than others.`\n  }, {\n    type: 'section',\n    title: \"üíª Cursor IDE: AI-Powered Development\",\n    content: `Cursor IDE transformed how I write code:\n        ‚Ä¢ Real-time AI suggestions while typing\n        ‚Ä¢ Intelligent code completion\n        ‚Ä¢ Built-in Claude integration\n        ‚Ä¢ Quick documentation lookup\n        \n        The combination of Cursor and Claude was perfect for learning - I could experiment\n        with code while getting immediate feedback and suggestions.`\n  }, {\n    type: 'section',\n    title: \"‚öõÔ∏è React App: Building the Interface\",\n    content: `Creating the panel interface with React was surprisingly straightforward:\n        ‚Ä¢ Used EEAct (React framework for After Effects)\n        ‚Ä¢ Created reusable components for common tasks\n        ‚Ä¢ Implemented a clean, modern design\n        ‚Ä¢ Added smooth animations and transitions\n        \n        React's component-based approach made it easy to organize features and maintain\n        the code as the project grew.`\n  }, {\n    type: 'section',\n    title: \"üìö GitHub: Version Control & Sharing\",\n    content: `GitHub became essential for:\n        ‚Ä¢ Tracking all code changes\n        ‚Ä¢ Creating backups\n        ‚Ä¢ Sharing with other artists\n        ‚Ä¢ Managing different versions\n        \n        As a VFX artist, I never thought I'd use GitHub, but it's now an integral part\n        of my workflow. It's not just for professional developers!`\n  }, {\n    type: 'section',\n    title: \"ü§ù Discord Integration: Team Communication\",\n    content: `The Discord bot integration streamlined our workflow:\n        ‚Ä¢ Automatic notifications for new exports\n        ‚Ä¢ Status updates for long renders\n        ‚Ä¢ Team announcements\n        ‚Ä¢ Quick feedback sharing\n        \n        Using Discord's webhook API with React made it simple to send updates\n        directly from the After Effects panel.`\n  }, {\n    type: 'section',\n    title: \"üé® Framer Motion: Bringing the UI to Life\",\n    content: `Animation played a crucial role in making the panel feel professional and \n        intuitive. Framer Motion helped me create smooth transitions and interactions:\n        ‚Ä¢ Fluid drag-and-drop for node arrangement\n        ‚Ä¢ Smooth transitions between states\n        ‚Ä¢ Interactive feedback for user actions\n        ‚Ä¢ Polished micro-animations\n        \n        Here are some examples of what's possible with Framer Motion:`\n  }, {\n    type: 'demo',\n    title: \"Interactive Demos\",\n    content: {\n      demos: [{\n        type: \"dragDemo\",\n        title: \"Drag Interactions\",\n        description: `Demonstrates different types of drag behaviors:\n              ‚Ä¢ Basic dragging with constraints\n              ‚Ä¢ Elastic drag with feedback\n              ‚Ä¢ Axis-locked movement`\n      }, {\n        type: \"example\",\n        title: \"Animation Playground\",\n        description: `Showcases various animation possibilities:\n              ‚Ä¢ Interactive cards\n              ‚Ä¢ Morphing shapes\n              ‚Ä¢ Particle effects\n              ‚Ä¢ Smooth transitions`\n      }]\n    }\n  }, {\n    type: 'section',\n    title: \"üéØ Why Animations Matter\",\n    content: `Adding thoughtful animations isn't just about aesthetics:\n        ‚Ä¢ Provides immediate feedback for user actions\n        ‚Ä¢ Makes the interface feel more responsive\n        ‚Ä¢ Guides users through complex interactions\n        ‚Ä¢ Creates a more engaging experience\n        \n        The key is finding the right balance - animations should enhance the experience,\n        not distract from it.`\n  }, {\n    type: 'conclusion',\n    content: {\n      summary: `By combining these tools - Claude AI, Cursor IDE, React, GitHub, and Discord - \n          I created something more powerful than I initially imagined. What started as a simple\n          automation project became a full-featured production tool that our whole team uses daily.`,\n      callToAction: {\n        text: \"Want to try it yourself?\",\n        links: [{\n          text: \"View Source on GitHub\",\n          url: \"https://github.com/Themolx/AeCustomPanel\"\n        }]\n      },\n      inspiration: \"Remember: Modern tools make development accessible to everyone. You don't need to be a professional programmer to create useful tools! üöÄ\"\n    }\n  }]\n};","map":{"version":3,"names":["aeCustomPanelPost","slug","title","date","author","tags","content","type","demos","description","summary","callToAction","text","links","url","inspiration"],"sources":["/Users/martintomek/passive/src/data/blogPosts/aeCustomPanel.js"],"sourcesContent":["export const aeCustomPanelPost = {\n  slug: 'ae-custom-panel',\n  title: \"Building a Custom Panel for After Effects with AI\",\n  date: \"March 29, 2024\",\n  author: \"Martin Tomek\",\n  tags: [\"After Effects\", \"Automation\", \"VFX\", \"Workflow\", \"Discord\"],\n  content: [\n    {\n      type: 'intro',\n      content: `As a Compositing TD, I wanted to automate repetitive tasks in After Effects. \n        Here's how I combined different tools to create a powerful automation solution. Each tool\n        played a crucial role in making this project successful.`\n    },\n    {\n      type: 'section',\n      title: \"ü§ñ Claude: The AI Assistant\",\n      content: `My journey started with Claude AI. As someone who isn't a professional programmer, \n        I discovered that Claude could:\n        ‚Ä¢ Break down complex problems into manageable steps\n        ‚Ä¢ Explain After Effects' scripting API in simple terms\n        ‚Ä¢ Suggest best practices and optimizations\n        ‚Ä¢ Help debug issues when I got stuck\n        \n        The key was asking specific questions and iteratively improving the code. Claude became\n        like a patient mentor, helping me understand not just what to code, but why certain\n        approaches work better than others.`\n    },\n    {\n      type: 'section',\n      title: \"üíª Cursor IDE: AI-Powered Development\",\n      content: `Cursor IDE transformed how I write code:\n        ‚Ä¢ Real-time AI suggestions while typing\n        ‚Ä¢ Intelligent code completion\n        ‚Ä¢ Built-in Claude integration\n        ‚Ä¢ Quick documentation lookup\n        \n        The combination of Cursor and Claude was perfect for learning - I could experiment\n        with code while getting immediate feedback and suggestions.`\n    },\n    {\n      type: 'section',\n      title: \"‚öõÔ∏è React App: Building the Interface\",\n      content: `Creating the panel interface with React was surprisingly straightforward:\n        ‚Ä¢ Used EEAct (React framework for After Effects)\n        ‚Ä¢ Created reusable components for common tasks\n        ‚Ä¢ Implemented a clean, modern design\n        ‚Ä¢ Added smooth animations and transitions\n        \n        React's component-based approach made it easy to organize features and maintain\n        the code as the project grew.`\n    },\n    {\n      type: 'section',\n      title: \"üìö GitHub: Version Control & Sharing\",\n      content: `GitHub became essential for:\n        ‚Ä¢ Tracking all code changes\n        ‚Ä¢ Creating backups\n        ‚Ä¢ Sharing with other artists\n        ‚Ä¢ Managing different versions\n        \n        As a VFX artist, I never thought I'd use GitHub, but it's now an integral part\n        of my workflow. It's not just for professional developers!`\n    },\n    {\n      type: 'section',\n      title: \"ü§ù Discord Integration: Team Communication\",\n      content: `The Discord bot integration streamlined our workflow:\n        ‚Ä¢ Automatic notifications for new exports\n        ‚Ä¢ Status updates for long renders\n        ‚Ä¢ Team announcements\n        ‚Ä¢ Quick feedback sharing\n        \n        Using Discord's webhook API with React made it simple to send updates\n        directly from the After Effects panel.`\n    },\n    {\n      type: 'section',\n      title: \"üé® Framer Motion: Bringing the UI to Life\",\n      content: `Animation played a crucial role in making the panel feel professional and \n        intuitive. Framer Motion helped me create smooth transitions and interactions:\n        ‚Ä¢ Fluid drag-and-drop for node arrangement\n        ‚Ä¢ Smooth transitions between states\n        ‚Ä¢ Interactive feedback for user actions\n        ‚Ä¢ Polished micro-animations\n        \n        Here are some examples of what's possible with Framer Motion:`,\n    },\n    {\n      type: 'demo',\n      title: \"Interactive Demos\",\n      content: {\n        demos: [\n          {\n            type: \"dragDemo\",\n            title: \"Drag Interactions\",\n            description: `Demonstrates different types of drag behaviors:\n              ‚Ä¢ Basic dragging with constraints\n              ‚Ä¢ Elastic drag with feedback\n              ‚Ä¢ Axis-locked movement`\n          },\n          {\n            type: \"example\",\n            title: \"Animation Playground\",\n            description: `Showcases various animation possibilities:\n              ‚Ä¢ Interactive cards\n              ‚Ä¢ Morphing shapes\n              ‚Ä¢ Particle effects\n              ‚Ä¢ Smooth transitions`\n          }\n        ]\n      }\n    },\n    {\n      type: 'section',\n      title: \"üéØ Why Animations Matter\",\n      content: `Adding thoughtful animations isn't just about aesthetics:\n        ‚Ä¢ Provides immediate feedback for user actions\n        ‚Ä¢ Makes the interface feel more responsive\n        ‚Ä¢ Guides users through complex interactions\n        ‚Ä¢ Creates a more engaging experience\n        \n        The key is finding the right balance - animations should enhance the experience,\n        not distract from it.`\n    },\n    {\n      type: 'conclusion',\n      content: {\n        summary: `By combining these tools - Claude AI, Cursor IDE, React, GitHub, and Discord - \n          I created something more powerful than I initially imagined. What started as a simple\n          automation project became a full-featured production tool that our whole team uses daily.`,\n        callToAction: {\n          text: \"Want to try it yourself?\",\n          links: [\n            {\n              text: \"View Source on GitHub\",\n              url: \"https://github.com/Themolx/AeCustomPanel\"\n            }\n          ]\n        },\n        inspiration: \"Remember: Modern tools make development accessible to everyone. You don't need to be a professional programmer to create useful tools! üöÄ\"\n      }\n    }\n  ]\n};"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG;EAC/BC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE,mDAAmD;EAC1DC,IAAI,EAAE,gBAAgB;EACtBC,MAAM,EAAE,cAAc;EACtBC,IAAI,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,CAAC;EACnEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,OAAO;IACbD,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEC,IAAI,EAAE,SAAS;IACfL,KAAK,EAAE,6BAA6B;IACpCI,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEC,IAAI,EAAE,SAAS;IACfL,KAAK,EAAE,uCAAuC;IAC9CI,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEC,IAAI,EAAE,SAAS;IACfL,KAAK,EAAE,sCAAsC;IAC7CI,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEC,IAAI,EAAE,SAAS;IACfL,KAAK,EAAE,sCAAsC;IAC7CI,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEC,IAAI,EAAE,SAAS;IACfL,KAAK,EAAE,4CAA4C;IACnDI,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEC,IAAI,EAAE,SAAS;IACfL,KAAK,EAAE,2CAA2C;IAClDI,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEC,IAAI,EAAE,MAAM;IACZL,KAAK,EAAE,mBAAmB;IAC1BI,OAAO,EAAE;MACPE,KAAK,EAAE,CACL;QACED,IAAI,EAAE,UAAU;QAChBL,KAAK,EAAE,mBAAmB;QAC1BO,WAAW,EAAE;AACzB;AACA;AACA;MACU,CAAC,EACD;QACEF,IAAI,EAAE,SAAS;QACfL,KAAK,EAAE,sBAAsB;QAC7BO,WAAW,EAAE;AACzB;AACA;AACA;AACA;MACU,CAAC;IAEL;EACF,CAAC,EACD;IACEF,IAAI,EAAE,SAAS;IACfL,KAAK,EAAE,0BAA0B;IACjCI,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEC,IAAI,EAAE,YAAY;IAClBD,OAAO,EAAE;MACPI,OAAO,EAAE;AACjB;AACA,oGAAoG;MAC5FC,YAAY,EAAE;QACZC,IAAI,EAAE,0BAA0B;QAChCC,KAAK,EAAE,CACL;UACED,IAAI,EAAE,uBAAuB;UAC7BE,GAAG,EAAE;QACP,CAAC;MAEL,CAAC;MACDC,WAAW,EAAE;IACf;EACF,CAAC;AAEL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}