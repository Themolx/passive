{"ast":null,"code":"var _jsxFileName = \"/Users/martintomek/passive/src/pages/BlogPost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport BlogContent from '../components/blog/BlogContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogPost() {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const blogContent = {\n    'nuke-grab-tool': {\n      title: \"ðŸš€ How I Built the Nuke Grab Tool (Without Being a Coding Expert)\",\n      date: \"November 9, 2024\",\n      author: \"Martin Tomek\",\n      tags: [\"Nuke\", \"Python\", \"Workflow\", \"Technical Guide\"],\n      content: [{\n        type: 'personal-intro',\n        content: \"I've been using Claude AI to help me create small scripts for Nuke - you'd be surprised how well it understands Nuke's Python API! After successfully building several smaller tools, I decided to tackle something I've always wanted: a Blender-style grab tool for Nuke's Node Graph.\"\n      }, {\n        type: 'journey-start',\n        content: {\n          title: \"Starting Small with Claude ðŸ¤–\",\n          text: \"Before the Grab Tool, I'd been using Claude to create various utility scripts for Nuke. Each success gave me more confidence. Claude was great at understanding Nuke's specific needs and could help debug issues quickly. It was like having a coding buddy who really knows Nuke inside out!\"\n        }\n      }, {\n        type: 'dialogue-section',\n        content: {\n          title: \"The Night Everything Clicked ðŸ’¡\",\n          conversation: {\n            me: \"Hey Claude, I've been loving how you helped with those smaller scripts. Now I have a bigger idea - you know how in Blender's node editor, you don't need to hover over nodes to move them? You just press a key, grab, and move? Could we make something like that for Nuke?\",\n            claude: \"Absolutely! Since we've already worked with Nuke's Python API on your other scripts, this should be interesting. We'll need to use PySide2 for the keyboard events and handle the node positions. Want to start with a basic prototype?\",\n            result: \"20 minutes later, we had a working prototype. All those smaller scripts had prepared me for this bigger project! ðŸŽ‰\"\n          }\n        }\n      }, {\n        type: 'development-timeline',\n        content: {\n          title: \"From Small Scripts to Full Tool ðŸ“ˆ\",\n          stages: [{\n            date: \"Before October\",\n            title: \"Building Confidence\",\n            description: \"Created various small utility scripts with Claude's help, learning Nuke's Python API along the way\"\n          }, {\n            date: \"October 2\",\n            title: \"The Big Jump\",\n            description: \"Decided to tackle the Grab Tool - the experience from smaller scripts made this feel less daunting\"\n          }, {\n            date: \"October 3-6\",\n            title: \"Rapid Evolution\",\n            description: \"Added features like scaling support, Ctrl+Z, and middle-click freeze - each addition felt easier than the last\"\n          }]\n        }\n      }, {\n        type: 'github-journey',\n        content: {\n          title: \"Why GitHub? ðŸ“š\",\n          text: \"As I created more and more scripts with Claude's help, I needed a way to keep track of them all. GitHub became my go-to place for storing these production tools. It's not just for professional developers - it's perfect for artists who code too!\"\n        }\n      }, {\n        type: 'encouragement',\n        content: {\n          title: \"Start Small, Dream Big ðŸŒŸ\",\n          message: \"If you're an artist thinking about creating tools but feeling intimidated by coding, here's my advice: start with small scripts! Use Claude AI - it's amazing how well it understands Nuke and VFX workflows. Each small success builds confidence for bigger projects.\",\n          tips: [\"Begin with simple utility scripts\", \"Use Claude AI as your coding partner\", \"Don't be afraid to experiment\", \"Save everything on GitHub\", \"Let each success build your confidence\"]\n        }\n      }]\n    }\n  };\n  const post = blogContent[slug];\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    className: \"max-w-4xl mx-auto px-4 py-24\",\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      className: \"mb-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-purple-400 mb-2\",\n        children: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-4\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4 text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"By \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: post.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"px-3 py-1 bg-white/10 rounded-full text-sm\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-8\",\n      children: post.content.map((section, index) => /*#__PURE__*/_jsxDEV(BlogContent, {\n        content: section\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogPost, \"DpOdpe+T7d3Ytb7f6neHj0L13w0=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useParams","motion","BlogContent","jsxDEV","_jsxDEV","BlogPost","_s","slug","blogContent","title","date","author","tags","content","type","text","conversation","me","claude","result","stages","description","message","tips","post","children","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","className","y","map","tag","section","index","_c","$RefreshReg$"],"sources":["/Users/martintomek/passive/src/pages/BlogPost.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport BlogContent from '../components/blog/BlogContent';\n\nfunction BlogPost() {\n  const { slug } = useParams();\n\n  const blogContent = {\n    'nuke-grab-tool': {\n      title: \"ðŸš€ How I Built the Nuke Grab Tool (Without Being a Coding Expert)\",\n      date: \"November 9, 2024\",\n      author: \"Martin Tomek\",\n      tags: [\"Nuke\", \"Python\", \"Workflow\", \"Technical Guide\"],\n      content: [\n        {\n          type: 'personal-intro',\n          content: \"I've been using Claude AI to help me create small scripts for Nuke - you'd be surprised how well it understands Nuke's Python API! After successfully building several smaller tools, I decided to tackle something I've always wanted: a Blender-style grab tool for Nuke's Node Graph.\"\n        },\n        {\n          type: 'journey-start',\n          content: {\n            title: \"Starting Small with Claude ðŸ¤–\",\n            text: \"Before the Grab Tool, I'd been using Claude to create various utility scripts for Nuke. Each success gave me more confidence. Claude was great at understanding Nuke's specific needs and could help debug issues quickly. It was like having a coding buddy who really knows Nuke inside out!\"\n          }\n        },\n        {\n          type: 'dialogue-section',\n          content: {\n            title: \"The Night Everything Clicked ðŸ’¡\",\n            conversation: {\n              me: \"Hey Claude, I've been loving how you helped with those smaller scripts. Now I have a bigger idea - you know how in Blender's node editor, you don't need to hover over nodes to move them? You just press a key, grab, and move? Could we make something like that for Nuke?\",\n              claude: \"Absolutely! Since we've already worked with Nuke's Python API on your other scripts, this should be interesting. We'll need to use PySide2 for the keyboard events and handle the node positions. Want to start with a basic prototype?\",\n              result: \"20 minutes later, we had a working prototype. All those smaller scripts had prepared me for this bigger project! ðŸŽ‰\"\n            }\n          }\n        },\n        {\n          type: 'development-timeline',\n          content: {\n            title: \"From Small Scripts to Full Tool ðŸ“ˆ\",\n            stages: [\n              {\n                date: \"Before October\",\n                title: \"Building Confidence\",\n                description: \"Created various small utility scripts with Claude's help, learning Nuke's Python API along the way\"\n              },\n              {\n                date: \"October 2\",\n                title: \"The Big Jump\",\n                description: \"Decided to tackle the Grab Tool - the experience from smaller scripts made this feel less daunting\"\n              },\n              {\n                date: \"October 3-6\",\n                title: \"Rapid Evolution\",\n                description: \"Added features like scaling support, Ctrl+Z, and middle-click freeze - each addition felt easier than the last\"\n              }\n            ]\n          }\n        },\n        {\n          type: 'github-journey',\n          content: {\n            title: \"Why GitHub? ðŸ“š\",\n            text: \"As I created more and more scripts with Claude's help, I needed a way to keep track of them all. GitHub became my go-to place for storing these production tools. It's not just for professional developers - it's perfect for artists who code too!\"\n          }\n        },\n        {\n          type: 'encouragement',\n          content: {\n            title: \"Start Small, Dream Big ðŸŒŸ\",\n            message: \"If you're an artist thinking about creating tools but feeling intimidated by coding, here's my advice: start with small scripts! Use Claude AI - it's amazing how well it understands Nuke and VFX workflows. Each small success builds confidence for bigger projects.\",\n            tips: [\n              \"Begin with simple utility scripts\",\n              \"Use Claude AI as your coding partner\",\n              \"Don't be afraid to experiment\",\n              \"Save everything on GitHub\",\n              \"Let each success build your confidence\"\n            ]\n          }\n        }\n      ]\n    }\n  };\n\n  const post = blogContent[slug];\n\n  if (!post) {\n    return <div>Post not found</div>;\n  }\n\n  return (\n    <motion.div \n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      className=\"max-w-4xl mx-auto px-4 py-24\"\n    >\n      {/* Header */}\n      <motion.div \n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"mb-12\"\n      >\n        <div className=\"text-purple-400 mb-2\">{post.date}</div>\n        <h1 className=\"text-4xl font-bold mb-4\">{post.title}</h1>\n        <div className=\"flex items-center gap-4 text-gray-400\">\n          <span>By {post.author}</span>\n          <div className=\"flex gap-2\">\n            {post.tags.map(tag => (\n              <span key={tag} className=\"px-3 py-1 bg-white/10 rounded-full text-sm\">\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Content */}\n      <div className=\"space-y-8\">\n        {post.content.map((section, index) => (\n          <BlogContent key={index} content={section} />\n        ))}\n      </div>\n    </motion.div>\n  );\n}\n\nexport default BlogPost; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}